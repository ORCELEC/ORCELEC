USE [NORCELEC]
GO

/****** Object:  StoredProcedure [dbo].[SP_PEDIDO_INTERNO_GUARDA_ASIGNACION_OP_PRIORIDAD]    Script Date: 09/07/2025 02:37:55 p. m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PEDIDO_INTERNO_GUARDA_ASIGNACION_OP_PRIORIDAD] --PRIMERAS ENTRADAS PRIMERAS SALIDAS
--DECLARE
	@EMPRESA AS BIGINT,
	@NO_PEDIDO AS BIGINT,
	@SUBTIPO INT, --0-PARA ORIGINAL,1-AGRUPAR EN FUNCIÓN A MATRIZ
	@USUARIO AS BIGINT,
	@COMPUTADORA AS NVARCHAR(50),
	@Agrupacion AgrupacionOPAsignacion READONLY
AS
BEGIN
	--SET @EMPRESA = 1
	--SET @NO_PEDIDO = 1
	--SET @SUBTIPO = 1
	--INSERT INTO @Agrupacion VALUES(1,'CVE_PRENDA')
	--INSERT INTO @Agrupacion VALUES(2,'FECHA')
	--INSERT INTO @Agrupacion VALUES(3,'FECHA')
	--INSERT INTO @Agrupacion VALUES(4,'CVE_PRENDA')
	--INSERT INTO @Agrupacion VALUES(5,'ORIGINAL')
	--INSERT INTO @Agrupacion VALUES(6,'CVE_PRENDA')
	--INSERT INTO @Agrupacion VALUES(7,'CVE_PRENDA')
	--INSERT INTO @Agrupacion VALUES(8,'CVE_PRENDA')
	--INSERT INTO @Agrupacion VALUES(9,'CVE_PRENDA')
	--SET @USUARIO = 0
	--SET @COMPUTADORA = 'ANALISISUNO'

	-----CODIGO ORIGINAL MODIFICADO EL 10/11/2022
	--CREATE TABLE #EMXOP
	--(
	--	NO_PEDIDO NUMERIC(18,0),
	--	PRIORIDAD BIGINT,
	--	LUGARENTREGA BIGINT,
	--	NOMBRELUGARDEENTREGA NVARCHAR(255),
	--	CVE_PRENDA NUMERIC(18,0),
	--	DESCRIPCIONPRENDA NVARCHAR(255),
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(15),
	--	DESCRIPCION NVARCHAR(255),
	--	CANTIDAD NUMERIC(18,0),
	--	CONSUMO NUMERIC(18,4),
	--	CONSUMOSALDO  NUMERIC(18,4),
	--	FECHAASIGNACION DATE,
	--	LOTES INT
	--)
	--INSERT INTO #EMXOP
	--(
	--	NO_PEDIDO,
	--	PRIORIDAD,
	--	LUGARENTREGA,
	--	NOMBRELUGARDEENTREGA,
	--	CVE_PRENDA,
	--	DESCRIPCIONPRENDA,
	--	CANTIDAD,
	--	TIPOMATERIAL,
	--	CVE_MATERIAL,
	--	DESCRIPCION,
	--	CONSUMO,
	--	CONSUMOSALDO
	--)
	--SELECT
	--	PIT.No_Pedido,
	--	PIT.Prioridad,
	--	PIT.LugarDeEntrega,
	--	PIT.NombreLugarDeEntrega,
	--	PIT.Cve_Prenda,
	--	PIT.DescripcionPrenda,
	--	SUM(PIT.Cantidad),
	--	PEMD.TipoMaterial,
	--	CASE WHEN PEMD.TipoMaterial = 'T' THEN CONVERT(NVARCHAR(15),PEMD.Cve_Tela) ELSE PEMD.Cve_Grupo + RIGHT('000000'+ CAST(PEMD.Cve_Habilitacion AS VARCHAR),6) END,
	--	PEMD.Descripcion,
	--	CASE WHEN TipoMaterial = 'T' THEN SUM((PIT.CANTIDAD*PEMD.Consumo)/CT.ANCHO) ELSE SUM(PIT.CANTIDAD*PEMD.Consumo) END,
	--	CASE WHEN TipoMaterial = 'T' THEN SUM((PIT.CANTIDAD*PEMD.Consumo)/CT.ANCHO) ELSE SUM(PIT.CANTIDAD*PEMD.Consumo) END
	--FROM
	--	PRENDA_ESTRUCTURA_MATERIALES PEM,
	--	PEDIDO_INTERNO_TALLAS PIT,
	--	PRENDA_ESTRUCTURA_MATERIALES_DETALLE PEMD
	--	LEFT JOIN
	--		CATALOGO_TELA CT
	--	ON
	--		CT.Cve_Tela = PEMD.Cve_Tela
	--WHERE
	--	PIT.Empresa = @EMPRESA
	--AND PIT.No_Pedido = @NO_PEDIDO
	--AND	PEMD.Cve_Prenda = PIT.Cve_Prenda
	--AND PEM.Cve_Prenda = PEMD.Cve_Prenda
	--AND PEM.Partida = PEMD.Partida
	--AND PIT.Talla = PEM.Talla
	--GROUP BY
	--	PIT.No_Pedido,
	--	PIT.Prioridad,
	--	PIT.LugarDeEntrega,
	--	PIT.NombreLugarDeEntrega,
	--	PIT.Cve_Prenda,
	--	PIT.DescripcionPrenda,
	--	PEMD.TipoMaterial,
	--	PEMD.Cve_Tela,
	--	PEMD.Cve_Grupo,
	--	PEMD.Cve_Habilitacion,
	--	PEMD.Descripcion

	--DECLARE 
	--	@CVE_PRENDA NUMERIC(18,0),
	--	@LUGARENTREGA BIGINT,
	--	@NOMBRELUGARENTREGA NVARCHAR(255),
	--	@PRIORIDAD BIGINT,
	--	@TIPOMATERIAL NVARCHAR(1),
	--	@CVE_MATERIAL NVARCHAR(50),
	--	@DESCRIPCIONMATERIAL NVARCHAR(255),
	--	@CONSUMO NUMERIC(18,4)

	----OBTIENE LAS CANTIDADES EN INVENTARIO
	--CREATE TABLE #INVENTARIOLUGARENTREGA
	--(
	--	NO_PEDIDO NUMERIC(18,0),
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_TELA NUMERIC(18,0),
	--	CVE_GRUPO NVARCHAR(3),
	--	CVE_HABILITACION NUMERIC(18,0),
	--	STOCK NUMERIC(18,4)
	--)
	--INSERT INTO #INVENTARIOLUGARENTREGA
	--(
	--	NO_PEDIDO,
	--	TIPOMATERIAL,
	--	CVE_TELA,
	--	CVE_GRUPO,
	--	CVE_HABILITACION,
	--	STOCK
	--)
	--SELECT
	--	No_Pedido,
	--	TipoMaterial,
	--	CASE WHEN TipoMaterial = 'T' THEN Cve_Tela ELSE NULL END,
	--	CASE WHEN TipoMaterial = 'H' THEN Cve_Grupo ELSE NULL END,
	--	CASE WHEN TipoMaterial = 'H' THEN Cve_Habilitacion ELSE NULL END,
	--	Stock
	--FROM
	--	SUGERIDO_COMPRA
	--WHERE
	--	No_Pedido = @NO_PEDIDO
	--AND Stock > 0

	----GUARDAR EN TABLA AUXILIAR LAS ORDENES DE COMPRA Y LAS FECHAS PROMESA DE ENTREGA PARA EL PEDIDO
	--CREATE TABLE #OCPARCIALIDADES
	--(
	--	NO_PEDIDO BIGINT,
	--	NO_ORDENCOMPRA NUMERIC(18,0),
	--	PARTIDA BIGINT,
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(255),
	--	DESCRIPCION_MATERIAL NVARCHAR(255),
	--	FACTOR NUMERIC(18,4),
	--	CANTIDAD_OC NUMERIC(18,4),
	--	NO_PARCIALIDAD INT,
	--	FECHAPROMESA DATE,
	--	CANTIDADPROMESA NUMERIC(18,4)
	--)
	--INSERT INTO #OCPARCIALIDADES
	--(
	--	NO_PEDIDO,
	--	NO_ORDENCOMPRA,
	--	PARTIDA,
	--	TIPOMATERIAL,
	--	CVE_MATERIAL,
	--	DESCRIPCION_MATERIAL,
	--	CANTIDAD_OC,
	--	FACTOR,
	--	NO_PARCIALIDAD,
	--	FECHAPROMESA,
	--	CANTIDADPROMESA
	--)
	--SELECT
	--	OCFPES.No_Pedido,
	--	OCFPES.No_OrdenCompra,
	--	OCFPES.Partida,
	--	OCFPES.TipoMaterial,
	--	OCFPES.Cve_Material,
	--	OCFPES.Descripcion_Material,
	--	OCFPES.Cantidad,
	--	OCFPES.Factor,
	--	OCFPES.No_Parcialidad,
	--	OCFPES.FechaPromesa,
	--	OCFPES.CantidadPromesa
	--FROM 
	--	ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA_SALDO OCFPES
	--WHERE
	--	OCFPES.EMPRESA = @EMPRESA
	--AND OCFPES.No_Pedido = @NO_PEDIDO
	--AND OCFPES.No_OrdenCompra = OCFPES.No_OrdenCompra
	--AND OCFPES.Partida = OCFPES.Partida
	--ORDER BY
	--	OCFPES.No_Pedido,
	--	OCFPES.No_OrdenCompra,
	--	OCFPES.Partida,
	--	OCFPES.TipoMaterial,
	--	OCFPES.Cve_Material,
	--	OCFPES.No_Parcialidad

	--DECLARE
	--	@INVENTARIOAUX NUMERIC(18,2),
	--	@NO_PARCIALIDAD BIGINT,
	--	@CANTIDADPOSITIVAS INT,
	--	@CANTIDADNEGATIVAS INT

	--CREATE TABLE #ITERACIONESOC
	--(
	--	EMPRESA BIGINT,
	--	NO_PEDIDO NUMERIC(18,0),
	--	PRIORIDAD INT,
	--	LUGARENTREGA INT,
	--	NOMBRELUGARENTREGA NVARCHAR(255),
	--	CVE_PRENDA NUMERIC(18,0),
	--	DESCRIPCIONPRENDA NVARCHAR(255),
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(50),
	--	DESCRIPCIONMATERIAL NVARCHAR(255),
	--	CONSUMO NUMERIC(18,4),
	--	NO_PARCIALIDAD BIGINT,
	--	NO_ORDENCOMPRA NUMERIC(18,0),
	--	PARTIDA NUMERIC(18,0),
	--	CANTIDADPROMESA NUMERIC(18,4),
	--	FECHAPROMESA DATE,
	--	ASIGNACIONPROMESA NUMERIC(18,4),
	--	SALDOCONSUMO NUMERIC(18,4),
	--	SOBRANTEPROMESA NUMERIC(18,4)
	--)

	--CREATE TABLE #XPRIORIDAD
	--(
	--	NO_PEDIDO BIGINT,
	--	PRIORIDAD INT,
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(15),
	--	DESCRIPCIONMATERIAL NVARCHAR(255),
	--	CONSUMO NUMERIC(18,4),
	--	No_Parcialidad int,
	--	OCPromesa NUMERIC(18,0),
	--	PartidaPromesa bigint,
	--	CantidadFechaPromesa numeric(18,4),
	--	FechaPromesa date,
	--	AsignacionPromesa numeric(18,4),
	--	SaldoConsumo numeric(18,4),
	--	SobrantePromesa numeric(18,4)
	--)

	--CREATE TABLE #XLUGARENTREGA
	--(
	--	NO_PEDIDO BIGINT,
	--	PRIORIDAD INT,
	--	LUGARENTREGA BIGINT,
	--	NOMBRELUGARENTREGA NVARCHAR(255),
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(15),
	--	DESCRIPCIONMATERIAL NVARCHAR(255),
	--	CONSUMO NUMERIC(18,4),
	--	No_Parcialidad int,
	--	OCPromesa NUMERIC(18,0),
	--	PartidaPromesa bigint,
	--	CantidadFechaPromesa numeric(18,4),
	--	FechaPromesa date,
	--	AsignacionPromesa numeric(18,4),
	--	SaldoConsumo numeric(18,4),
	--	SobrantePromesa numeric(18,4)
	--)

	--CREATE TABLE #XCVEPRENDA
	--(
	--	NO_PEDIDO BIGINT,
	--	PRIORIDAD INT,
	--	LUGARENTREGA BIGINT,
	--	NOMBRELUGARENTREGA NVARCHAR(255),
	--	CVE_PRENDA NUMERIC(18,0),
	--	DESCRIPCIONPRENDA NVARCHAR(255),
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(15),
	--	DESCRIPCIONMATERIAL NVARCHAR(255),
	--	CONSUMO NUMERIC(18,4),
	--	No_Parcialidad int,
	--	OCPromesa NUMERIC(18,0),
	--	PartidaPromesa bigint,
	--	CantidadFechaPromesa numeric(18,4),
	--	FechaPromesa date,
	--	AsignacionPromesa numeric(18,4),
	--	SaldoConsumo numeric(18,4),
	--	SobrantePromesa numeric(18,4)
	--)
	----SE INICIALIZA EL @NO_PARCIALIDAD A 1 ANTES DE ENTRAR
	--SET @NO_PARCIALIDAD = 1

	-----SE HACE LA ASIGNACIÓN POR LUGAR DE ENTREGA Y PRIORIDAD
	-----SE HACE POR CADA HABILITACIÓN Y TELA Y CADA LUGAR DE ENTREGA
	--DECLARE LISTAOP CURSOR FOR
	--SELECT
	--	NO_PEDIDO,
	--	TIPOMATERIAL,
	--	CVE_MATERIAL,
	--	DESCRIPCION,
	--	PRIORIDAD
	--FROM
	--	#EMXOP
	----WHERE
	----	CVE_MATERIAL IN ('BOL000010')
	----AND PRIORIDAD IN (1,2,3,4,5,6)
	--GROUP BY
	--	NO_PEDIDO,
	--	TIPOMATERIAL,
	--	CVE_MATERIAL,
	--	DESCRIPCION,
	--	PRIORIDAD
	--ORDER BY
	--	TIPOMATERIAL,
	--	CVE_MATERIAL,
	--	PRIORIDAD
	--OPEN LISTAOP
	--FETCH NEXT FROM LISTAOP INTO @NO_PEDIDO,@TIPOMATERIAL,@CVE_MATERIAL,@DESCRIPCIONMATERIAL,@PRIORIDAD
	--WHILE @@FETCH_STATUS = 0
	--BEGIN
	--	--INICIALIZAMOS VARIABLES AUXILIARES
	--	SET @INVENTARIOAUX = 0
		
	--	--SE GUARDAN LOS REGISTROS AGRUPADOS POR PRIORIDAD DEL MATERIAL ACTUAL
	--	INSERT INTO #XPRIORIDAD
	--	(
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCIONMATERIAL,
	--		CONSUMO,
	--		SaldoConsumo
	--	)
	--	SELECT
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCION,
	--		SUM(CONSUMO),
	--		SUM(CONSUMO)
	--	FROM
	--		#EMXOP
	--	WHERE
	--		NO_PEDIDO = @NO_PEDIDO
	--	AND PRIORIDAD = @PRIORIDAD
	--	AND TIPOMATERIAL = @TIPOMATERIAL
	--	AND CVE_MATERIAL = @CVE_MATERIAL
	--	AND DESCRIPCION = @DESCRIPCIONMATERIAL
	--	GROUP BY
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCION


	--	--SE GUARDAN LOS REGISTROS AGRUPADOS POR PRIORIDAD Y LUGAR DE ENTREGA DEL MATERIAL ACTUAL
	--	INSERT INTO #XLUGARENTREGA
	--	(
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		LUGARENTREGA,
	--		NOMBRELUGARENTREGA,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCIONMATERIAL,
	--		CONSUMO,
	--		SaldoConsumo
	--	)
	--	SELECT
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		LUGARENTREGA,
	--		NOMBRELUGARDEENTREGA,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCION,
	--		SUM(CONSUMO),
	--		SUM(CONSUMO)
	--	FROM
	--		#EMXOP
	--	WHERE
	--		NO_PEDIDO = @NO_PEDIDO
	--	AND PRIORIDAD = @PRIORIDAD
	--	AND TIPOMATERIAL = @TIPOMATERIAL
	--	AND CVE_MATERIAL = @CVE_MATERIAL
	--	AND DESCRIPCION = @DESCRIPCIONMATERIAL
	--	GROUP BY
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		LUGARENTREGA,
	--		NOMBRELUGARDEENTREGA,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCION

	--	--SE GUARDAN LOS REGISTROS AGRUPADOS POR PRIORIDAD, LUGAR DE ENTREGA, Y CVE_PRENDA DEL MATERIAL ACTUAL
	--	INSERT INTO #XCVEPRENDA
	--	(
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		LUGARENTREGA,
	--		NOMBRELUGARENTREGA,
	--		CVE_PRENDA,
	--		DESCRIPCIONPRENDA,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCIONMATERIAL,
	--		CONSUMO,
	--		SaldoConsumo
	--	)
	--	SELECT
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		LUGARENTREGA,
	--		NOMBRELUGARDEENTREGA,
	--		CVE_PRENDA,
	--		DESCRIPCIONPRENDA,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCION,
	--		SUM(CONSUMO),
	--		SUM(CONSUMO)
	--	FROM
	--		#EMXOP
	--	WHERE
	--		NO_PEDIDO = @NO_PEDIDO
	--	AND PRIORIDAD = @PRIORIDAD
	--	AND TIPOMATERIAL = @TIPOMATERIAL
	--	AND CVE_MATERIAL = @CVE_MATERIAL
	--	AND DESCRIPCION = @DESCRIPCIONMATERIAL
	--	GROUP BY
	--		NO_PEDIDO,
	--		PRIORIDAD,
	--		LUGARENTREGA,
	--		NOMBRELUGARDEENTREGA,
	--		CVE_PRENDA,
	--		DESCRIPCIONPRENDA,
	--		TIPOMATERIAL,
	--		CVE_MATERIAL,
	--		DESCRIPCION

	--	----PRIMERO BUSCA SI HAY INVENTARIO RESERVADO PARA ESTE PEDIDO
	--	--IF @TIPOMATERIAL = 'T'
	--	--	SELECT @INVENTARIOAUX = ISNULL(STOCK,0)  FROM #INVENTARIOLUGARENTREGA WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_TELA = @CVE_MATERIAL
	--	--IF @TIPOMATERIAL = 'H'
	--	--	SELECT @INVENTARIOAUX = ISNULL(STOCK,0)  FROM #INVENTARIOLUGARENTREGA WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_GRUPO = SUBSTRING(@CVE_MATERIAL,1,3) AND CVE_HABILITACION = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))

	--	--IF @INVENTARIOAUX > 0
	--	--BEGIN
	--	--	IF @INVENTARIOAUX <= @CONSUMO
	--	--	BEGIN
	--	--		SET @CONSUMO = @CONSUMO-@INVENTARIOAUX
	--	--		IF @TIPOMATERIAL = 'T'
	--	--		BEGIN
	--	--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@INVENTARIOAUX WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_TELA = @CVE_MATERIAL
	--	--		END
	--	--		IF @TIPOMATERIAL = 'H'
	--	--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@INVENTARIOAUX WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_GRUPO = SUBSTRING(@CVE_MATERIAL,1,3) AND CVE_HABILITACION = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))
	--	--	END
	--	--	ELSE
	--	--	BEGIN
	--	--		IF @TIPOMATERIAL = 'T'
	--	--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@CONSUMO WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_TELA = @CVE_MATERIAL
	--	--		IF @TIPOMATERIAL = 'H'
	--	--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@CONSUMO WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_GRUPO = SUBSTRING(@CVE_MATERIAL,1,3) AND CVE_HABILITACION = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))
	--	--		SET @CONSUMO = 0
	--	--	END
	--	--END
	--	---*******************************ITERACIÓN 1
	--	--IF @CONSUMO > 0
	--	--BEGIN

	--		--EMPIEZA PROCESO DE ITERACIONES
	--		--SE SELECCIONA EL @NO_PARCIALIDAD MÁS CHICO DEL MATERIAL ACTUAL DONDE HAYA SALDO
	--		SELECT TOP 1 @NO_PARCIALIDAD = OC.NO_PARCIALIDAD FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = @NO_PEDIDO AND OC.TIPOMATERIAL = @TIPOMATERIAL AND OC.CVE_MATERIAL = @CVE_MATERIAL AND OC.CANTIDADPROMESA > 0 ORDER BY NO_PARCIALIDAD ASC

	--		--CALCULA EL SOBRANTE DE CANTIDAD FECHA PROMESA DE ACUERDO AL NO_PARCIALIDAD
	--		UPDATE
	--			#XPRIORIDAD
	--		SET
	--			No_Parcialidad = OC.No_Parcialidad,
	--			OCPromesa = OC.NO_ORDENCOMPRA,
	--			PartidaPromesa = OC.PARTIDA,
	--			CantidadFechaPromesa = OC.CANTIDADPROMESA,
	--			FechaPromesa = OC.FECHAPROMESA,
	--			SobrantePromesa = OC.CANTIDADPROMESA-XP.SaldoConsumo
	--		FROM
	--			#XPRIORIDAD XP,
	--			#OCPARCIALIDADES OC
	--		WHERE
	--			XP.TIPOMATERIAL = OC.TIPOMATERIAL
	--		AND XP.CVE_MATERIAL = OC.CVE_MATERIAL
	--		AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD
	--		AND XP.PRIORIDAD = @PRIORIDAD
	--		--********************************************************************************			
	--		--SE CUENTAS LOS POSITIVOS Y LOS NEGATIVOS, DEBE SER O UNO POSITIVO O UNO NEGATIVO A FUERZA
	--		SELECT
	--			@CANTIDADPOSITIVAS = ISNULL(COUNT(*),0)
	--		FROM
	--			#XPRIORIDAD A
	--		WHERE
	--			A.NO_PEDIDO = @NO_PEDIDO
	--		AND A.PRIORIDAD = @PRIORIDAD
	--		AND TIPOMATERIAL = @TIPOMATERIAL
	--		AND CVE_MATERIAL = @CVE_MATERIAL
	--		AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--		AND	SobrantePromesa >= 0

	--		SELECT
	--			@CANTIDADNEGATIVAS = ISNULL(COUNT(*),0)
	--		FROM
	--			#XPRIORIDAD A
	--		WHERE
	--			A.NO_PEDIDO = @NO_PEDIDO
	--		AND A.PRIORIDAD = @PRIORIDAD
	--		AND TIPOMATERIAL = @TIPOMATERIAL
	--		AND CVE_MATERIAL = @CVE_MATERIAL
	--		AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--		AND	SobrantePromesa < 0

	--		IF @CANTIDADPOSITIVAS = 1 --INDICA QUE SE PUEDE ASIGNAR LA PARCIALIDAD COMPLETA EN LA PRIORIDAD ACTUAL
	--		BEGIN
	--			----INSERTA MOVIMIENTO EN LA TABLA DE ITERACIONES POR CADA UNA DE LAS FILAS HASTA CVE_PRENDA DE LA PRIORIDAD ACTUAL
	--			INSERT INTO #ITERACIONESOC
	--			(
	--				EMPRESA,
	--				NO_PEDIDO,
	--				PRIORIDAD,
	--				LUGARENTREGA,
	--				NOMBRELUGARENTREGA,
	--				CVE_PRENDA,
	--				DESCRIPCIONPRENDA,
	--				TIPOMATERIAL,
	--				CVE_MATERIAL,
	--				DESCRIPCIONMATERIAL,
	--				CONSUMO,
	--				NO_PARCIALIDAD,
	--				NO_ORDENCOMPRA,
	--				PARTIDA,
	--				CANTIDADPROMESA,
	--				FECHAPROMESA,
	--				ASIGNACIONPROMESA,
	--				SALDOCONSUMO,
	--				SOBRANTEPROMESA
	--			)
	--			SELECT
	--				@EMPRESA,
	--				EMLE.NO_PEDIDO,
	--				EMLE.PRIORIDAD,
	--				EMLE.LUGARENTREGA,
	--				EMLE.NOMBRELUGARDEENTREGA,
	--				EMLE.CVE_PRENDA,
	--				EMLE.DESCRIPCIONPRENDA,
	--				EMLE.TIPOMATERIAL,
	--				EMLE.CVE_MATERIAL,
	--				EMLE.DESCRIPCION,
	--				EMLE.CONSUMO,
	--				A.No_Parcialidad,
	--				A.OCPromesa,
	--				A.PartidaPromesa,
	--				A.CantidadFechaPromesa,
	--				A.FechaPromesa,
	--				EMLE.CONSUMOSALDO,
	--				0,--ES 0 EL SALDO DE CONSUMO PORQUE SE ASIGNO COMPLETO CON LA PARCIALIDAD
	--				A.SobrantePromesa
	--			FROM
	--				#EMXOP EMLE,
	--				#XPRIORIDAD A
	--			WHERE
	--				EMLE.NO_PEDIDO = @NO_PEDIDO
	--			AND EMLE.TIPOMATERIAL = @TIPOMATERIAL
	--			AND EMLE.CVE_MATERIAL = @CVE_MATERIAL
	--			AND EMLE.DESCRIPCION = @DESCRIPCIONMATERIAL
	--			AND A.NO_PEDIDO = EMLE.NO_PEDIDO
	--			AND A.TIPOMATERIAL = EMLE.TIPOMATERIAL
	--			AND A.CVE_MATERIAL = EMLE.CVE_MATERIAL
	--			AND A.PRIORIDAD = EMLE.PRIORIDAD
	--			AND EMLE.PRIORIDAD = @PRIORIDAD
	--			AND EMLE.CONSUMOSALDO > 0

	--			--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
	--			UPDATE
	--				#EMXOP
	--			SET
	--				CONSUMOSALDO = 0
	--			FROM
	--				#EMXOP EMLE,
	--				#XPRIORIDAD A
	--			WHERE
	--				EMLE.NO_PEDIDO = @NO_PEDIDO
	--			AND EMLE.TIPOMATERIAL = @TIPOMATERIAL
	--			AND EMLE.CVE_MATERIAL = @CVE_MATERIAL
	--			AND EMLE.DESCRIPCION = @DESCRIPCIONMATERIAL
	--			AND A.TIPOMATERIAL = EMLE.TIPOMATERIAL
	--			AND A.CVE_MATERIAL = EMLE.CVE_MATERIAL
	--			AND A.PRIORIDAD = EMLE.PRIORIDAD
	--			AND EMLE.PRIORIDAD = @PRIORIDAD

	--			UPDATE
	--				#XPRIORIDAD
	--			SET
	--				SaldoConsumo = 0
	--			FROM
	--				#XPRIORIDAD A
	--			WHERE
	--				A.NO_PEDIDO = @NO_PEDIDO
	--			AND A.TIPOMATERIAL = @TIPOMATERIAL
	--			AND A.CVE_MATERIAL = @CVE_MATERIAL
	--			AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--			AND A.PRIORIDAD = @PRIORIDAD

	--			UPDATE
	--				#XLUGARENTREGA
	--			SET
	--				SaldoConsumo = 0
	--			FROM
	--				#XLUGARENTREGA A
	--			WHERE
	--				A.NO_PEDIDO = @NO_PEDIDO
	--			AND A.TIPOMATERIAL = @TIPOMATERIAL
	--			AND A.CVE_MATERIAL = @CVE_MATERIAL
	--			AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--			AND A.PRIORIDAD = @PRIORIDAD

	--			UPDATE
	--				#XCVEPRENDA
	--			SET
	--				SaldoConsumo = 0
	--			FROM
	--				#XCVEPRENDA A
	--			WHERE
	--				A.NO_PEDIDO = @NO_PEDIDO
	--			AND A.TIPOMATERIAL = @TIPOMATERIAL
	--			AND A.CVE_MATERIAL = @CVE_MATERIAL
	--			AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--			AND A.PRIORIDAD = @PRIORIDAD
				
	--			--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
	--			UPDATE
	--				#OCPARCIALIDADES
	--			SET
	--				CANTIDADPROMESA = A.SobrantePromesa
	--			FROM
	--				#XPRIORIDAD A,
	--				#OCPARCIALIDADES OCFP
	--			WHERE
	--				A.NO_PEDIDO = @NO_PEDIDO
	--			AND	A.TIPOMATERIAL = OCFP.TIPOMATERIAL
	--			AND A.CVE_MATERIAL = OCFP.CVE_MATERIAL
	--			AND A.DESCRIPCIONMATERIAL = OCFP.DESCRIPCION_MATERIAL
	--			AND A.PRIORIDAD = @PRIORIDAD
	--			AND OCFP.NO_PARCIALIDAD = A.No_Parcialidad
	--			AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
	--			AND OCFP.PARTIDA = A.PartidaPromesa
	--			AND OCFP.FECHAPROMESA = A.FechaPromesa
	--		END
			
	--		--SI SE LLEGA A CUMPLIR ESTA CONDICIÓN, QUIERE DECIR QUE LA CANTIDAD DE LA PARCIALIDAD ACTUAL NO ALCANZA PARA SURTIR LA
	--		--PRIORIDAD COMPLETA, SE ENTRA AL SIGUIENTE NIVEL POR LUGAR DE ENTREGA Y SE HACE EL MISMO PROCESO CON LA
	--		--PARCIALIDAD ACTUAL HASTA QUE SE ASIGNÉ COMPLETA
	--		IF @CANTIDADNEGATIVAS = 1
	--		BEGIN

	--			CICLOLUGARENTREGA:
	--			--CALCULA EL SOBRANTE DE CANTIDAD FECHA PROMESA DE ACUERDO A LA PRIORIDAD Y NO_PARCIALIDAD

	--			UPDATE
	--				#XLUGARENTREGA
	--			SET
	--				No_Parcialidad = OC.No_Parcialidad,
	--				OCPromesa = OC.NO_ORDENCOMPRA,
	--				PartidaPromesa = OC.PARTIDA,
	--				CantidadFechaPromesa = OC.CANTIDADPROMESA,
	--				FechaPromesa = OC.FECHAPROMESA,
	--				SobrantePromesa = OC.CANTIDADPROMESA-XP.SaldoConsumo
	--			FROM
	--				#XLUGARENTREGA XP,
	--				#OCPARCIALIDADES OC
	--			WHERE
	--				XP.TIPOMATERIAL = OC.TIPOMATERIAL
	--			AND XP.CVE_MATERIAL = OC.CVE_MATERIAL
	--			AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD
	--			AND XP.PRIORIDAD = @PRIORIDAD
	--			AND XP.SaldoConsumo > 0

	--			--********************************************************************************			
	--			--SE CUENTAS LOS POSITIVOS Y LOS NEGATIVOS, AQUI SI PUEDE HABER MÁS DE UN POSITIVO Y MÁS DE UN NEGATIVO
	--			SELECT
	--				@CANTIDADPOSITIVAS = ISNULL(COUNT(*),0)
	--			FROM
	--				#XLUGARENTREGA A
	--			WHERE
	--				A.NO_PEDIDO = @NO_PEDIDO
	--			AND A.PRIORIDAD = @PRIORIDAD
	--			AND TIPOMATERIAL = @TIPOMATERIAL
	--			AND CVE_MATERIAL = @CVE_MATERIAL
	--			AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--			AND SaldoConsumo > 0
	--			AND	SobrantePromesa >= 0

	--			SELECT
	--				@CANTIDADNEGATIVAS = ISNULL(COUNT(*),0)
	--			FROM
	--				#XLUGARENTREGA A
	--			WHERE
	--				A.NO_PEDIDO = @NO_PEDIDO
	--			AND A.PRIORIDAD = @PRIORIDAD
	--			AND TIPOMATERIAL = @TIPOMATERIAL
	--			AND CVE_MATERIAL = @CVE_MATERIAL
	--			AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--			AND SaldoConsumo > 0
	--			AND	SobrantePromesa < 0

	--			IF @CANTIDADPOSITIVAS > 0 --INDICA QUE SE PUEDE ASIGNAR UN LUGAR DE ENTREGA COMPLETO
	--			BEGIN
	--				--INSERTA MOVIMIENTO EN LA TABLA DE ITERACIONES POR CADA UNA DE LAS FILAS HASTA CVE_PRENDA DEL LUGAR DE ENTREGA
	--				--QUE SE PUEDE ASIGNAR COMPLETO SELECCIONANDO EL QUE TIENE LA CANTIDAD SOBRANTE MENOR POSITIVO
	--				INSERT INTO #ITERACIONESOC
	--				(
	--					EMPRESA,
	--					NO_PEDIDO,
	--					PRIORIDAD,
	--					LUGARENTREGA,
	--					NOMBRELUGARENTREGA,
	--					CVE_PRENDA,
	--					DESCRIPCIONPRENDA,
	--					TIPOMATERIAL,
	--					CVE_MATERIAL,
	--					DESCRIPCIONMATERIAL,
	--					CONSUMO,
	--					NO_PARCIALIDAD,
	--					NO_ORDENCOMPRA,
	--					PARTIDA,
	--					CANTIDADPROMESA,
	--					FECHAPROMESA,
	--					ASIGNACIONPROMESA,
	--					SALDOCONSUMO,
	--					SOBRANTEPROMESA
	--				)
	--				SELECT
	--					@EMPRESA,
	--					EMLE.NO_PEDIDO,
	--					EMLE.PRIORIDAD,
	--					EMLE.LUGARENTREGA,
	--					EMLE.NOMBRELUGARDEENTREGA,
	--					EMLE.CVE_PRENDA,
	--					EMLE.DESCRIPCIONPRENDA,
	--					EMLE.TIPOMATERIAL,
	--					EMLE.CVE_MATERIAL,
	--					EMLE.DESCRIPCION,
	--					EMLE.CONSUMO,
	--					A.No_Parcialidad,
	--					A.OCPromesa,
	--					A.PartidaPromesa,
	--					A.CantidadFechaPromesa,
	--					A.FechaPromesa,
	--					EMLE.CONSUMOSALDO,
	--					0,--ES 0 EL SALDO DE CONSUMO PORQUE SE ASIGNO COMPLETO EL LUGAR DE ENTREGA
	--					A.SobrantePromesa
	--				FROM
	--					#EMXOP EMLE,
	--					#XLUGARENTREGA A
	--				WHERE
	--					A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND EMLE.NO_PEDIDO = A.NO_PEDIDO
	--				AND EMLE.LUGARENTREGA = A.LUGARENTREGA
	--				AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
	--				AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
	--				AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
	--				AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
	--				AND EMLE.PRIORIDAD = @PRIORIDAD
	--				AND A.PRIORIDAD = @PRIORIDAD
	--				AND EMLE.CONSUMOSALDO > 0

	--				--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
	--				UPDATE
	--					#OCPARCIALIDADES
	--				SET
	--					CANTIDADPROMESA = A.SobrantePromesa
	--				FROM
	--					#XLUGARENTREGA A,
	--					#OCPARCIALIDADES OCFP
	--				WHERE
	--					A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.PRIORIDAD = @PRIORIDAD
	--				AND OCFP.NO_PARCIALIDAD = @NO_PARCIALIDAD
	--				AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
	--				AND OCFP.PARTIDA = A.PartidaPromesa
	--				AND OCFP.FECHAPROMESA = A.FechaPromesa

	--				--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
	--				UPDATE
	--					#EMXOP
	--				SET
	--					CONSUMOSALDO = 0
	--				FROM
	--					#EMXOP EMLE,
	--					#XLUGARENTREGA A
	--				WHERE
	--					A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND	EMLE.NO_PEDIDO = A.NO_PEDIDO
	--				AND EMLE.LUGARENTREGA = A.LUGARENTREGA
	--				AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
	--				AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
	--				AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
	--				AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
	--				AND EMLE.PRIORIDAD = @PRIORIDAD
	--				AND A.PRIORIDAD = @PRIORIDAD

	--				--ACTUALIZA SALDO, SOLO RESTANDO EL CONSUMO DEL LUGAR DE ENTREGA
	--				UPDATE
	--					#XPRIORIDAD
	--				SET
	--					SaldoConsumo = SaldoConsumo - (SELECT TOP 1 XLE.SaldoConsumo FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				FROM
	--					#XPRIORIDAD A
	--				WHERE
	--					A.NO_PEDIDO = @NO_PEDIDO
	--				AND A.TIPOMATERIAL = @TIPOMATERIAL
	--				AND A.CVE_MATERIAL = @CVE_MATERIAL
	--				AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--				AND A.PRIORIDAD = @PRIORIDAD

	--				--ACTUALIZA EL SALDO EN 0 DE LAS CLAVES DE PRENDA QUE COMPRENDE EL LUGAR DE ENTREGA
	--				UPDATE
	--					#XCVEPRENDA
	--				SET
	--					SaldoConsumo = 0
	--				FROM
	--					#XCVEPRENDA A
	--				WHERE
	--					A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.PRIORIDAD = @PRIORIDAD

	--				--ACTUALIZA EL SALDO EN 0 DEL LUGAR DE ENTREGA QUE SE PUDO ASIGNAR
	--				UPDATE
	--					#XLUGARENTREGA
	--				SET
	--					SaldoConsumo = 0
	--				FROM
	--					#XLUGARENTREGA A
	--				WHERE
	--					A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--				AND A.PRIORIDAD = @PRIORIDAD
				
	--				--SE REINICIA EL CICLO PARA PROBAR CON OTRO LUGAR DE ENTREGA SI ES QUE AÚN HAY
	--				GOTO CICLOLUGARENTREGA
	--			END

	--			--AQUI ENTRA EN CASO DE QUE YA NO SE CUBRA NI UN LUGAR DE ENTREGA DE LA PRIORIDAD ACTUAL
	--			--SE PASA AL SIGUIENTE NIVEL QUE ES POR CLAVE DE PRENDA
	--			IF @CANTIDADPOSITIVAS = 0 AND @CANTIDADNEGATIVAS > 0
	--			BEGIN
	--				--SE INTENTA ASIGNAR EL SALDO EN EL SIGUIENTE 
	--				CICLOCVEPRENDA:
	--				--SE SELECCIONA EL @NO_PARCIALIDAD MÁS CHICO DEL MATERIAL ACTUAL DONDE HAYA SALDO
	--				SELECT TOP 1 @NO_PARCIALIDAD = OC.NO_PARCIALIDAD FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = @NO_PEDIDO AND OC.TIPOMATERIAL = @TIPOMATERIAL AND OC.CVE_MATERIAL = @CVE_MATERIAL AND OC.CANTIDADPROMESA > 0 ORDER BY NO_PARCIALIDAD ASC

	--				--CALCULA EL SOBRANTE DE CANTIDAD FECHA PROMESA DE ACUERDO A LA PRIORIDAD Y NO_PARCIALIDAD EN CVE_PRENDA

	--				UPDATE
	--					#XCVEPRENDA
	--				SET
	--					No_Parcialidad = OC.No_Parcialidad,
	--					OCPromesa = OC.NO_ORDENCOMPRA,
	--					PartidaPromesa = OC.PARTIDA,
	--					CantidadFechaPromesa = OC.CANTIDADPROMESA,
	--					FechaPromesa = OC.FECHAPROMESA,
	--					SobrantePromesa = OC.CANTIDADPROMESA-XP.SaldoConsumo
	--				FROM
	--					#XCVEPRENDA XP,
	--					#OCPARCIALIDADES OC
	--				WHERE
	--					XP.TIPOMATERIAL = OC.TIPOMATERIAL
	--				AND XP.CVE_MATERIAL = OC.CVE_MATERIAL
	--				AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD
	--				AND XP.PRIORIDAD = @PRIORIDAD
	--				AND XP.SaldoConsumo > 0

	--				--SE CUENTAS LOS POSITIVOS Y LOS NEGATIVOS, AQUI SI PUEDE HABER MÁS DE UN POSITIVO Y MÁS DE UN NEGATIVO
	--				SELECT
	--					@CANTIDADPOSITIVAS = ISNULL(COUNT(*),0)
	--				FROM
	--					#XCVEPRENDA A
	--				WHERE
	--					A.NO_PEDIDO = @NO_PEDIDO
	--				AND A.PRIORIDAD = @PRIORIDAD
	--				AND TIPOMATERIAL = @TIPOMATERIAL
	--				AND CVE_MATERIAL = @CVE_MATERIAL
	--				AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--				AND SaldoConsumo > 0
	--				AND	SobrantePromesa >= 0

	--				SELECT
	--					@CANTIDADNEGATIVAS = ISNULL(COUNT(*),0)
	--				FROM
	--					#XCVEPRENDA A
	--				WHERE
	--					A.NO_PEDIDO = @NO_PEDIDO
	--				AND A.PRIORIDAD = @PRIORIDAD
	--				AND TIPOMATERIAL = @TIPOMATERIAL
	--				AND CVE_MATERIAL = @CVE_MATERIAL
	--				AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--				AND SaldoConsumo > 0
	--				AND	SobrantePromesa < 0

	--				IF @CANTIDADPOSITIVAS > 0 --INDICA QUE SE PUEDE ASIGNAR EN UNA CVE_PRENDA COMPLETA
	--				BEGIN
	--					--INSERTA MOVIMIENTO EN LA TABLA DE ITERACIONES POR CADA UNA DE LAS FILAS DE LA CVE_PRENDA
	--					--QUE SE PUEDE ASIGNAR COMPLETO SELECCIONANDO EL QUE TIENE LA CANTIDAD SOBRANTE MENOR POSITIVO
						
	--					INSERT INTO #ITERACIONESOC
	--					(
	--						EMPRESA,
	--						NO_PEDIDO,
	--						PRIORIDAD,
	--						LUGARENTREGA,
	--						NOMBRELUGARENTREGA,
	--						CVE_PRENDA,
	--						DESCRIPCIONPRENDA,
	--						TIPOMATERIAL,
	--						CVE_MATERIAL,
	--						DESCRIPCIONMATERIAL,
	--						CONSUMO,
	--						NO_PARCIALIDAD,
	--						NO_ORDENCOMPRA,
	--						PARTIDA,
	--						CANTIDADPROMESA,
	--						FECHAPROMESA,
	--						ASIGNACIONPROMESA,
	--						SALDOCONSUMO,
	--						SOBRANTEPROMESA
	--					)
	--					SELECT
	--						@EMPRESA,
	--						EMLE.NO_PEDIDO,
	--						EMLE.PRIORIDAD,
	--						EMLE.LUGARENTREGA,
	--						EMLE.NOMBRELUGARDEENTREGA,
	--						EMLE.CVE_PRENDA,
	--						EMLE.DESCRIPCIONPRENDA,
	--						EMLE.TIPOMATERIAL,
	--						EMLE.CVE_MATERIAL,
	--						EMLE.DESCRIPCION,
	--						EMLE.CONSUMO,
	--						A.No_Parcialidad,
	--						A.OCPromesa,
	--						A.PartidaPromesa,
	--						A.CantidadFechaPromesa,
	--						A.FechaPromesa,
	--						EMLE.CONSUMOSALDO,
	--						0,--ES 0 EL SALDO DE CONSUMO PORQUE SE ASIGNO COMPLETO EL LUGAR DE ENTREGA
	--						A.SobrantePromesa
	--					FROM
	--						#EMXOP EMLE,
	--						#XCVEPRENDA A
	--					WHERE
	--						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND EMLE.NO_PEDIDO = A.NO_PEDIDO
	--					AND EMLE.LUGARENTREGA = A.LUGARENTREGA
	--					AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
	--					AND EMLE.CVE_PRENDA = A.CVE_PRENDA
	--					AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
	--					AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
	--					AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
	--					AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
	--					AND EMLE.PRIORIDAD = @PRIORIDAD
	--					AND A.PRIORIDAD = @PRIORIDAD
	--					AND EMLE.CONSUMOSALDO > 0

	--					--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
	--					UPDATE
	--						#OCPARCIALIDADES
	--					SET
	--						CANTIDADPROMESA = A.SobrantePromesa
	--					FROM
	--						#XCVEPRENDA A,
	--						#OCPARCIALIDADES OCFP
	--					WHERE
	--						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.PRIORIDAD = @PRIORIDAD
	--					AND OCFP.NO_PARCIALIDAD = @NO_PARCIALIDAD
	--					AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
	--					AND OCFP.PARTIDA = A.PartidaPromesa
	--					AND OCFP.FECHAPROMESA = A.FechaPromesa

	--					--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
	--					UPDATE
	--						#EMXOP
	--					SET
	--						CONSUMOSALDO = 0
	--					FROM
	--						#EMXOP EMLE,
	--						#XCVEPRENDA A
	--					WHERE
	--						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND	EMLE.NO_PEDIDO = A.NO_PEDIDO
	--					AND EMLE.LUGARENTREGA = A.LUGARENTREGA
	--					AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
	--					AND EMLE.CVE_PRENDA = A.CVE_PRENDA
	--					AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
	--					AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
	--					AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
	--					AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
	--					AND EMLE.PRIORIDAD = @PRIORIDAD
	--					AND A.PRIORIDAD = @PRIORIDAD

	--					--ACTUALIZA SALDO, SOLO RESTANDO EL CONSUMO DE LA CLAVE DE PRENDA
	--					UPDATE
	--						#XPRIORIDAD
	--					SET
	--						SaldoConsumo = SaldoConsumo - (SELECT TOP 1 XLE.SaldoConsumo FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					FROM
	--						#XPRIORIDAD A
	--					WHERE
	--						A.NO_PEDIDO = @NO_PEDIDO
	--					AND A.TIPOMATERIAL = @TIPOMATERIAL
	--					AND A.CVE_MATERIAL = @CVE_MATERIAL
	--					AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
	--					AND A.PRIORIDAD = @PRIORIDAD

	--					--ACTUALIZA EL SALDO CONSUMO RESTANDO LO QUE SE PUDO ASIGNAR DE LA CVE_PRENDA
	--					UPDATE
	--						#XLUGARENTREGA
	--					SET
	--						SaldoConsumo = SaldoConsumo - (SELECT TOP 1 XLE.SaldoConsumo FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					FROM
	--						#XLUGARENTREGA A
	--					WHERE
	--						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.PRIORIDAD = @PRIORIDAD

	--					--ACTUALIZA EL SALDO EN 0 DE LA CLAVE DE PRENDA QUE SE PUDO ASIGNAR
	--					UPDATE
	--						#XCVEPRENDA
	--					SET
	--						SaldoConsumo = 0
	--					FROM
	--						#XCVEPRENDA A
	--					WHERE
	--						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
	--					AND A.PRIORIDAD = @PRIORIDAD
				
	--					--SE REINICIA EL CICLO PARA PROBAR CON OTRO LUGAR DE ENTREGA SI ES QUE AÚN HAY
	--					GOTO CICLOCVEPRENDA
	--				END

	--				--ENTRA A ESTA CONDICION CUANDO TERMINO DE ASIGNAR POR CLAVE DE PRENDA Y AUN QUEDAN POR ASIGNAR
	--				IF @CANTIDADPOSITIVAS = 0 AND @CANTIDADNEGATIVAS > 0
	--				BEGIN
	--					--ENTRA CUANDO YA NI UN SALDO ALCANZA A CUBRIR LA TOTALIDAD DE UNA CLAVE DE PRENDA
	--					--SE ASIGNAN LOS SALDOS RESTANTES
	--					DECLARE FILASASIGNASALDOS CURSOR FOR
	--					SELECT 
	--						LUGARENTREGA,
	--						CVE_PRENDA
	--					FROM 
	--						#EMXOP
	--					WHERE 
	--						NO_PEDIDO = @NO_PEDIDO
	--					AND TIPOMATERIAL = @TIPOMATERIAL 
	--					AND CVE_MATERIAL = @CVE_MATERIAL 
	--					AND CONSUMOSALDO > 0
	--					OPEN FILASASIGNASALDOS
	--					FETCH NEXT FROM FILASASIGNASALDOS INTO @LUGARENTREGA,@CVE_PRENDA
	--					WHILE @@FETCH_STATUS = 0
	--					BEGIN
	--						--SE ACTUALIZA EL SOBRANTE DE LA CANTIDAD PROMESA,
	--						--POR LO QUE SE ASIGNA AL QUE QUEDA MÁS CERCA DEL 0
	--					CICLOASIGNASALDOS:

							
							
	--						UPDATE
	--							#XCVEPRENDA
	--						SET
	--							No_Parcialidad = (SELECT OC.NO_PARCIALIDAD FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
	--							OCPromesa = (SELECT TOP 1 OC.NO_ORDENCOMPRA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
	--							PartidaPromesa = (SELECT TOP 1 OC.PARTIDA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
	--							CantidadFechaPromesa = (SELECT TOP 1 OC.CANTIDADPROMESA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
	--							FechaPromesa = (SELECT TOP 1 OC.FECHAPROMESA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
	--							SobrantePromesa = (SELECT TOP 1 OC.CANTIDADPROMESA-XP.SaldoConsumo FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD)
	--						FROM
	--							#XCVEPRENDA XP
	--						WHERE
	--							XP.NO_PEDIDO = @NO_PEDIDO
	--						AND XP.PRIORIDAD = @PRIORIDAD
	--						AND XP.LUGARENTREGA = @LUGARENTREGA
	--						AND XP.CVE_PRENDA = @CVE_PRENDA
	--						AND	XP.TIPOMATERIAL = @TIPOMATERIAL
	--						AND XP.CVE_MATERIAL = @CVE_MATERIAL
	--						AND XP.SaldoConsumo > 0

	--						--INSERTA EL MOVIMIENTO EN LA TABLA DE #ITERACIONES
	--						INSERT INTO #ITERACIONESOC
	--						(
	--							EMPRESA,
	--							NO_PEDIDO,
	--							PRIORIDAD,
	--							LUGARENTREGA,
	--							NOMBRELUGARENTREGA,
	--							CVE_PRENDA,
	--							DESCRIPCIONPRENDA,
	--							TIPOMATERIAL,
	--							CVE_MATERIAL,
	--							DESCRIPCIONMATERIAL,
	--							CONSUMO,
	--							NO_PARCIALIDAD,
	--							NO_ORDENCOMPRA,
	--							PARTIDA,
	--							CANTIDADPROMESA,
	--							FECHAPROMESA,
	--							ASIGNACIONPROMESA,
	--							SALDOCONSUMO,
	--							SOBRANTEPROMESA
	--						)
	--						SELECT
	--							@EMPRESA,
	--							EMLE.NO_PEDIDO,
	--							EMLE.PRIORIDAD,
	--							EMLE.LUGARENTREGA,
	--							EMLE.NOMBRELUGARDEENTREGA,
	--							EMLE.CVE_PRENDA,
	--							EMLE.DESCRIPCIONPRENDA,
	--							EMLE.TIPOMATERIAL,
	--							EMLE.CVE_MATERIAL,
	--							EMLE.DESCRIPCION,
	--							EMLE.CONSUMO,
	--							A.No_Parcialidad,
	--							A.OCPromesa,
	--							A.PartidaPromesa,
	--							A.CantidadFechaPromesa,
	--							A.FechaPromesa,
	--							CASE WHEN EMLE.CONSUMOSALDO >= A.CantidadFechaPromesa THEN A.CantidadFechaPromesa ELSE EMLE.CONSUMOSALDO END,
	--							CASE WHEN EMLE.CONSUMOSALDO >= A.CantidadFechaPromesa THEN EMLE.CONSUMOSALDO-A.CantidadFechaPromesa ELSE 0 END,
	--							CASE WHEN EMLE.CONSUMOSALDO >= A.CantidadFechaPromesa THEN 0 ELSE A.CantidadFechaPromesa-EMLE.CONSUMOSALDO END
	--						FROM
	--							#EMXOP EMLE,
	--							#XCVEPRENDA A
	--						WHERE
	--							A.NO_PEDIDO = @NO_PEDIDO
	--						AND A.PRIORIDAD = @PRIORIDAD
	--						AND A.LUGARENTREGA = @LUGARENTREGA
	--						AND A.CVE_PRENDA = @CVE_PRENDA
	--						AND A.TIPOMATERIAL = @TIPOMATERIAL
	--						AND A.CVE_MATERIAL = @CVE_MATERIAL
	--						AND EMLE.NO_PEDIDO = A.NO_PEDIDO
	--						AND EMLE.LUGARENTREGA = A.LUGARENTREGA
	--						AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
	--						AND EMLE.CVE_PRENDA = A.CVE_PRENDA
	--						AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
	--						AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
	--						AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
	--						AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
	--						AND EMLE.CONSUMOSALDO > 0
									
	--						--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
	--						UPDATE
	--							#OCPARCIALIDADES
	--						SET
	--							CANTIDADPROMESA = CASE WHEN A.SaldoConsumo >= A.CantidadFechaPromesa THEN 0 ELSE A.CantidadFechaPromesa-A.SaldoConsumo END
	--						FROM
	--							#XCVEPRENDA A,
	--							#OCPARCIALIDADES OCFP
	--						WHERE
	--							A.NO_PEDIDO = @NO_PEDIDO
	--						AND A.PRIORIDAD = @PRIORIDAD
	--						AND A.LUGARENTREGA = @LUGARENTREGA
	--						AND A.CVE_PRENDA = @CVE_PRENDA
	--						AND A.TIPOMATERIAL = @TIPOMATERIAL
	--						AND A.CVE_MATERIAL = @CVE_MATERIAL
	--						AND OCFP.NO_PARCIALIDAD = A.No_Parcialidad
	--						AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
	--						AND OCFP.PARTIDA = A.PartidaPromesa
	--						AND OCFP.FECHAPROMESA = A.FechaPromesa

	--						--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
	--						UPDATE
	--							#EMXOP
	--						SET
	--							CONSUMOSALDO = CASE WHEN A.SaldoConsumo >= A.CantidadFechaPromesa THEN A.SaldoConsumo-A.CantidadFechaPromesa ELSE 0 END
	--						FROM
	--							#EMXOP EMLE,
	--							#XCVEPRENDA A
	--						WHERE
	--							A.NO_PEDIDO = @NO_PEDIDO
	--						AND A.PRIORIDAD = @PRIORIDAD
	--						AND A.LUGARENTREGA = @LUGARENTREGA
	--						AND A.CVE_PRENDA = @CVE_PRENDA
	--						AND A.TIPOMATERIAL = @TIPOMATERIAL
	--						AND A.CVE_MATERIAL = @CVE_MATERIAL
	--						AND	EMLE.NO_PEDIDO = A.NO_PEDIDO
	--						AND EMLE.LUGARENTREGA = A.LUGARENTREGA
	--						AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
	--						AND EMLE.CVE_PRENDA = A.CVE_PRENDA
	--						AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
	--						AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
	--						AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
	--						AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL

	--						--ACTUALIZA SALDO
	--						UPDATE
	--							#XPRIORIDAD
	--						SET
	--							SaldoConsumo = CASE WHEN XCP.SaldoConsumo >= XCP.CantidadFechaPromesa THEN A.SaldoConsumo-XCP.CantidadFechaPromesa ELSE A.SaldoConsumo-XCP.SaldoConsumo END
	--						FROM
	--							#XPRIORIDAD A,
	--							#XCVEPRENDA XCP
	--						WHERE
	--							A.NO_PEDIDO = @NO_PEDIDO
	--						AND A.PRIORIDAD = @PRIORIDAD
	--						AND A.TIPOMATERIAL = @TIPOMATERIAL
	--						AND A.CVE_MATERIAL = @CVE_MATERIAL
	--						AND XCP.NO_PEDIDO = A.NO_PEDIDO
	--						AND XCP.PRIORIDAD = A.PRIORIDAD
	--						AND XCP.LUGARENTREGA = @LUGARENTREGA
	--						AND XCP.CVE_PRENDA = @CVE_PRENDA

	--						--ACTUALIZA EL SALDO CONSUMO RESTANDO LO QUE SE PUDO ASIGNAR DE LA CVE_PRENDA
	--						UPDATE
	--							#XLUGARENTREGA
	--						SET
	--							SaldoConsumo = CASE WHEN XCP.SaldoConsumo >= XCP.CantidadFechaPromesa THEN A.SaldoConsumo-XCP.CantidadFechaPromesa ELSE A.SaldoConsumo-XCP.SaldoConsumo END
	--						FROM
	--							#XLUGARENTREGA A,
	--							#XCVEPRENDA XCP
	--						WHERE
	--							A.NO_PEDIDO = @NO_PEDIDO
	--						AND A.PRIORIDAD = @PRIORIDAD
	--						AND A.LUGARENTREGA = @LUGARENTREGA
	--						AND A.TIPOMATERIAL = @TIPOMATERIAL
	--						AND A.CVE_MATERIAL = @CVE_MATERIAL
	--						AND XCP.NO_PEDIDO = A.NO_PEDIDO
	--						AND XCP.PRIORIDAD = A.PRIORIDAD
	--						AND XCP.LUGARENTREGA = A.LUGARENTREGA
	--						AND XCP.CVE_PRENDA = @CVE_PRENDA

	--						--ACTUALIZA EL SALDO DE LA CLAVE DE PRENDA QUE SE ASIGNÓ
	--						UPDATE
	--							#XCVEPRENDA
	--						SET
	--							SaldoConsumo = CASE WHEN A.SaldoConsumo >= A.CantidadFechaPromesa THEN A.SaldoConsumo-A.CantidadFechaPromesa ELSE 0 END
	--						FROM
	--							#XCVEPRENDA A
	--						WHERE
	--							A.NO_PEDIDO = @NO_PEDIDO
	--						AND A.PRIORIDAD = @PRIORIDAD
	--						AND A.LUGARENTREGA = @LUGARENTREGA
	--						AND A.CVE_PRENDA = @CVE_PRENDA
	--						AND A.TIPOMATERIAL = @TIPOMATERIAL
	--						AND A.CVE_MATERIAL = @CVE_MATERIAL

	--						IF EXISTS(SELECT * FROM #OCPARCIALIDADES WHERE NO_PEDIDO = @NO_PEDIDO AND TIPOMATERIAL = @TIPOMATERIAL AND CVE_MATERIAL = @CVE_MATERIAL AND NO_PARCIALIDAD = @NO_PARCIALIDAD AND CANTIDADPROMESA = 0)
	--							SET @NO_PARCIALIDAD += 1

	--						IF EXISTS(SELECT * FROM #XCVEPRENDA WHERE NO_PEDIDO = @NO_PEDIDO AND PRIORIDAD = @PRIORIDAD AND LUGARENTREGA = @LUGARENTREGA AND CVE_PRENDA = @CVE_PRENDA AND SaldoConsumo > 0)
	--							GOTO CICLOASIGNASALDOS

	--						FETCH NEXT FROM FILASASIGNASALDOS INTO @LUGARENTREGA,@CVE_PRENDA
	--					END
	--					CLOSE FILASASIGNASALDOS
	--					DEALLOCATE FILASASIGNASALDOS	
						
	--				END
	--			END
	--		END
	--		--ESTE CASO SE DA CUANDO LA PARCIALIDAD NO ALCANZA PARA ASIGNAR LA PRIORIDAD COMPLETA
	--		--SE MANDA EL MENSAJE AL USUARIO PARA QUE DECIDA COMO SE VA A ASIGNAR
	--	--END
	--		--SE BORRA #XPRIORIDAD PARA TRABAJAR CON EL SIGUIENTE MATERIAL
	--		DELETE #XPRIORIDAD
	--		DELETE #XLUGARENTREGA
	--		DELETE #XCVEPRENDA
	--	FETCH NEXT FROM LISTAOP INTO @NO_PEDIDO,@TIPOMATERIAL,@CVE_MATERIAL,@DESCRIPCIONMATERIAL,@PRIORIDAD
	--END
	--CLOSE LISTAOP
	--DEALLOCATE LISTAOP

	-----**************************************************************************************************************************************
	----******************TERMINA CODIGO ORIGINAL MODIFICADO EL 10/11/2022

	---CODIGO NUEVO INSERTADO EL 10/11/2022
	CREATE TABLE #EMXOP
	(
		NO_PEDIDO NUMERIC(18,0),
		PRIORIDAD BIGINT,
		LUGARENTREGA BIGINT,
		NOMBRELUGARDEENTREGA NVARCHAR(255),
		CVE_PRENDA NUMERIC(18,0),
		DESCRIPCIONPRENDA NVARCHAR(255),
		TIPOMATERIAL NVARCHAR(1),
		CVE_MATERIAL NVARCHAR(15),
		DESCRIPCION NVARCHAR(255),
		CANTIDAD NUMERIC(18,0),
		CONSUMO NUMERIC(18,4),
		CONSUMOSALDO  NUMERIC(18,4),
		FECHAASIGNACION DATE,
		LOTES INT,
		UNIDAD NVARCHAR(50)
	)
	INSERT INTO #EMXOP
	(
		NO_PEDIDO,
		PRIORIDAD,
		LUGARENTREGA,
		NOMBRELUGARDEENTREGA,
		CVE_PRENDA,
		DESCRIPCIONPRENDA,
		CANTIDAD,
		TIPOMATERIAL,
		CVE_MATERIAL,
		DESCRIPCION,
		CONSUMO,
		CONSUMOSALDO,
		UNIDAD
	)
	SELECT
		PIT.No_Pedido,
		PIT.Prioridad,
		PIT.LugarDeEntrega,
		PIT.NombreLugarDeEntrega,
		PIT.Cve_Prenda,
		PIT.DescripcionPrenda,
		SUM(PIT.Cantidad),
		PEMD.TipoMaterial,
		CASE WHEN PEMD.TipoMaterial = 'T' THEN CONVERT(NVARCHAR(15),PEMD.Cve_Tela) ELSE PEMD.Cve_Grupo + RIGHT('000000'+ CAST(PEMD.Cve_Habilitacion AS VARCHAR),6) END,
		PEMD.Descripcion,
		CASE WHEN TipoMaterial = 'T' THEN SUM(CONVERT(NUMERIC(18,2),((PIT.CANTIDAD-ISNULL(RIPT.CANTIDAD,0))*PEMD.Consumo))/CT.ANCHO) ELSE SUM(CONVERT(NUMERIC(18,2),(PIT.CANTIDAD-ISNULL(RIPT.CANTIDAD,0))*PEMD.Consumo)) END,
		CASE WHEN TipoMaterial = 'T' THEN SUM(CONVERT(NUMERIC(18,2),((PIT.CANTIDAD-ISNULL(RIPT.CANTIDAD,0))*PEMD.Consumo))/CT.ANCHO) ELSE SUM(CONVERT(NUMERIC(18,2),(PIT.CANTIDAD-ISNULL(RIPT.CANTIDAD,0))*PEMD.Consumo)) END,
		CASE WHEN TipoMaterial = 'T' THEN 'METROS' ELSE HG.Unidad END
	FROM
		PRENDA_ESTRUCTURA_MATERIALES PEM,
		PEDIDO_INTERNO_TALLAS PIT
		LEFT JOIN
			RESERVADO_INVENTARIO_PRODUCTO_TERMINADO RIPT
		ON
			RIPT.Empresa = PIT.Empresa
		AND RIPT.No_Pedido = PIT.No_Pedido
		AND RIPT.Partida = PIT.Partida
		AND RIPT.Cve_Prenda = PIT.Cve_Prenda
		AND RIPT.LugarDeEntrega = PIT.LugarDeEntrega
		AND RIPT.Prioridad = PIT.Prioridad
		AND RIPT.Talla = PIT.Talla,
		PRENDA_ESTRUCTURA_MATERIALES_DETALLE PEMD
		LEFT JOIN
			CATALOGO_TELA CT
		ON
			CT.Cve_Tela = PEMD.Cve_Tela
		LEFT JOIN
			HABILITACION_GRUPO HG
		ON
			HG.Cve_Grupo = PEMD.Cve_Grupo
	WHERE
		PIT.Empresa = @EMPRESA
	AND PIT.No_Pedido = @NO_PEDIDO
	AND	PEMD.Cve_Prenda = PIT.Cve_Prenda
	AND PEM.Cve_Prenda = PEMD.Cve_Prenda
	AND PEM.Partida = PEMD.Partida
	AND PIT.Talla = PEM.Talla
	GROUP BY
		PIT.No_Pedido,
		PIT.Prioridad,
		PIT.LugarDeEntrega,
		PIT.NombreLugarDeEntrega,
		PIT.Cve_Prenda,
		PIT.DescripcionPrenda,
		PEMD.TipoMaterial,
		PEMD.Cve_Tela,
		PEMD.Cve_Grupo,
		PEMD.Cve_Habilitacion,
		PEMD.Descripcion,
		HG.Unidad

	--ELIMINA LAS FILAS EN #EMXOP CON CONSUMO 0
	DELETE #EMXOP WHERE CONSUMO = 0

	UPDATE
		#EMXOP
	SET
		Cantidad = CEILING(Cantidad)
	WHERE 
		Unidad = 'PIEZA(S)' 
	AND Cantidad != ROUND(Cantidad, 0);

	DECLARE 
		@CVE_PRENDA NUMERIC(18,0),
		@LUGARENTREGA BIGINT,
		@NOMBRELUGARENTREGA NVARCHAR(255),
		@PRIORIDAD BIGINT,
		@TIPOMATERIAL NVARCHAR(1),
		@CVE_MATERIAL NVARCHAR(50),
		@DESCRIPCIONMATERIAL NVARCHAR(255),
		@CONSUMO NUMERIC(18,4),
		@NO_ORDENCOMPRA BIGINT,
		@PARTIDA INT,
		@NO_PARCIALIDAD_ORIGINAL INT,
		@ASIGNARNOPARCIALIDAD INT

	--OBTIENE LAS CANTIDADES EN INVENTARIO
	CREATE TABLE #INVENTARIOLUGARENTREGA
	(
		NO_PEDIDO NUMERIC(18,0),
		TIPOMATERIAL NVARCHAR(1),
		CVE_TELA NUMERIC(18,0),
		CVE_GRUPO NVARCHAR(3),
		CVE_HABILITACION NUMERIC(18,0),
		STOCK NUMERIC(18,4)
	)
	INSERT INTO #INVENTARIOLUGARENTREGA
	(
		NO_PEDIDO,
		TIPOMATERIAL,
		CVE_TELA,
		CVE_GRUPO,
		CVE_HABILITACION,
		STOCK
	)
	SELECT
		No_Pedido,
		TipoMaterial,
		CASE WHEN TipoMaterial = 'T' THEN Cve_Tela ELSE NULL END,
		CASE WHEN TipoMaterial = 'H' THEN Cve_Grupo ELSE NULL END,
		CASE WHEN TipoMaterial = 'H' THEN Cve_Habilitacion ELSE NULL END,
		Stock
	FROM
		SUGERIDO_COMPRA
	WHERE
		No_Pedido = @NO_PEDIDO
	AND Stock > 0
	AND No_OP = 0

	--GUARDAR EN TABLA AUXILIAR LAS ORDENES DE COMPRA Y LAS FECHAS PROMESA DE ENTREGA PARA EL PEDIDO
	--*************CODIGO ORIGINAL
	--CREATE TABLE #OCPARCIALIDADES
	--(
	--	NO_PEDIDO BIGINT,
	--	NO_ORDENCOMPRA NUMERIC(18,0),
	--	PARTIDA BIGINT,
	--	TIPOMATERIAL NVARCHAR(1),
	--	CVE_MATERIAL NVARCHAR(255),
	--	DESCRIPCION_MATERIAL NVARCHAR(255),
	--	FACTOR NUMERIC(18,4),
	--	CANTIDAD_OC NUMERIC(18,4),
	--	NO_PARCIALIDAD INT,
	--	FECHAPROMESA DATE,
	--	CANTIDADPROMESA NUMERIC(18,4)
	--)
	--INSERT INTO #OCPARCIALIDADES
	--(
	--	NO_PEDIDO,
	--	NO_ORDENCOMPRA,
	--	PARTIDA,
	--	TIPOMATERIAL,
	--	CVE_MATERIAL,
	--	DESCRIPCION_MATERIAL,
	--	CANTIDAD_OC,
	--	FACTOR,
	--	NO_PARCIALIDAD,
	--	FECHAPROMESA,
	--	CANTIDADPROMESA
	--)
	--SELECT
	--	OCFPES.No_Pedido,
	--	OCFPES.No_OrdenCompra,
	--	OCFPES.Partida,
	--	OCFPES.TipoMaterial,
	--	OCFPES.Cve_Material,
	--	OCFPES.Descripcion_Material,
	--	OCFPES.Cantidad,
	--	OCFPES.Factor,
	--	OCFPES.No_Parcialidad,
	--	OCFPES.FechaPromesa,
	--	OCFPES.CantidadPromesa
	--FROM 
	--	ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA_SALDO OCFPES
	--WHERE
	--	OCFPES.EMPRESA = @EMPRESA
	--AND OCFPES.No_Pedido = @NO_PEDIDO
	--AND OCFPES.No_OrdenCompra = OCFPES.No_OrdenCompra
	--AND OCFPES.Partida = OCFPES.Partida
	--ORDER BY
	--	OCFPES.No_Pedido,
	--	OCFPES.No_OrdenCompra,
	--	OCFPES.Partida,
	--	OCFPES.TipoMaterial,
	--	OCFPES.Cve_Material,
	--	OCFPES.No_Parcialidad
	--**************TERMINA CODIGO ORIGINAL

	---*****NUEVO CODIGO PARA ACOMODAR LAS #OCPARCIALIDADES JUNTO CON LO QUE SE RESERVO DE INVENTARIO 14/07/2023
	CREATE TABLE #OCPARCIALIDADES
	(
		NO_PEDIDO BIGINT,
		NO_ORDENCOMPRA NUMERIC(18,0),
		PARTIDA BIGINT,
		TIPOMATERIAL NVARCHAR(1),
		CVE_MATERIAL NVARCHAR(255),
		DESCRIPCION_MATERIAL NVARCHAR(255),
		FACTOR NUMERIC(18,4),
		CANTIDAD_OC NUMERIC(18,4),
		NO_PARCIALIDAD INT,
		NO_PARCIALIDAD_ORIGINAL INT,
		FECHAPROMESA DATE,
		CANTIDADPROMESA NUMERIC(18,4),
		TOTAL_OC INT --GUARDA EL TOTAL DE OC QUE SE CREARON PARA EL MISMO MATERIAL
	)
	INSERT INTO #OCPARCIALIDADES
	(
		NO_PEDIDO,
		NO_ORDENCOMPRA,
		PARTIDA,
		TIPOMATERIAL,
		CVE_MATERIAL,
		DESCRIPCION_MATERIAL,
		CANTIDAD_OC,
		FACTOR,
		NO_PARCIALIDAD,
		NO_PARCIALIDAD_ORIGINAL,
		FECHAPROMESA,
		CANTIDADPROMESA,
		TOTAL_OC
	)

	SELECT
		OCFPES.No_Pedido,
		OCFPES.No_OrdenCompra,
		OCFPES.Partida,
		OCFPES.TipoMaterial,
		OCFPES.Cve_Material,
		OCFPES.Descripcion_Material,
		OCFPES.Cantidad,
		OCFPES.Factor,
		ROW_NUMBER() OVER(PARTITION BY OCFPES.TipoMaterial, OCFPES.Cve_Material ORDER BY OCFPES.TipoMaterial, OCFPES.Cve_Material,OCFPES.FechaPromesa),
		OCFPES.No_Parcialidad,
		OCFPES.FechaPromesa,
		OCFPES.CantidadPromesa,
		(SELECT COUNT(*) FROM ORDEN_COMPRA OC WHERE OC.Empresa = OCFPES.Empresa AND OC.No_Pedido = OCFPES.No_Pedido AND OC.Cve_Material = OCFPES.Cve_Material)
	FROM 
		ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA_SALDO OCFPES
	WHERE
		OCFPES.EMPRESA = @EMPRESA
	AND OCFPES.No_Pedido = @NO_PEDIDO
	AND OCFPES.No_OrdenCompra = OCFPES.No_OrdenCompra
	AND OCFPES.Partida = OCFPES.Partida
	AND OCFPES.No_OP = 0
	ORDER BY
		OCFPES.No_Pedido,
		OCFPES.TipoMaterial,
		OCFPES.Cve_Material,
		OCFPES.FechaPromesa

	DECLARE MATERIALACOMODARPARCIALIDAD CURSOR FOR
	SELECT 
		CVE_MATERIAL 
	FROM 
		#OCPARCIALIDADES 
	WHERE 
		TOTAL_OC > 1
	GROUP BY
		CVE_MATERIAL
	OPEN MATERIALACOMODARPARCIALIDAD
	FETCH NEXT FROM MATERIALACOMODARPARCIALIDAD INTO @CVE_MATERIAL
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @ASIGNARNOPARCIALIDAD = 1
		DECLARE OCACOMODARPARCIALIDAD CURSOR FOR
		SELECT 
			NO_ORDENCOMPRA,
			PARTIDA,
			NO_PARCIALIDAD_ORIGINAL
		FROM 
			#OCPARCIALIDADES 
		WHERE 
			CVE_MATERIAL = @CVE_MATERIAL
		ORDER BY 
			FECHAPROMESA ASC
		OPEN OCACOMODARPARCIALIDAD
		FETCH NEXT FROM OCACOMODARPARCIALIDAD INTO @NO_ORDENCOMPRA,@PARTIDA,@NO_PARCIALIDAD_ORIGINAL
		WHILE @@FETCH_STATUS = 0
		BEGIN	
			UPDATE
				#OCPARCIALIDADES
			SET
				NO_PARCIALIDAD = @ASIGNARNOPARCIALIDAD
			WHERE
				NO_ORDENCOMPRA = @NO_ORDENCOMPRA
			AND PARTIDA = @PARTIDA
			AND NO_PARCIALIDAD_ORIGINAL = @NO_PARCIALIDAD_ORIGINAL
			SET @ASIGNARNOPARCIALIDAD += 1
			FETCH NEXT FROM OCACOMODARPARCIALIDAD INTO @NO_ORDENCOMPRA,@PARTIDA,@NO_PARCIALIDAD_ORIGINAL
		END
		CLOSE OCACOMODARPARCIALIDAD
		DEALLOCATE OCACOMODARPARCIALIDAD
		FETCH NEXT FROM MATERIALACOMODARPARCIALIDAD INTO @CVE_MATERIAL
	END
	CLOSE MATERIALACOMODARPARCIALIDAD
	DEALLOCATE MATERIALACOMODARPARCIALIDAD
	--*********TERMINA NUEVO CODIGO

	DECLARE
		@INVENTARIOAUX NUMERIC(18,4),
		@NO_PARCIALIDAD BIGINT,
		@CANTIDADPOSITIVAS INT,
		@CANTIDADNEGATIVAS INT

	CREATE TABLE #ITERACIONESOC
	(
		EMPRESA BIGINT,
		NO_PEDIDO NUMERIC(18,0),
		PRIORIDAD INT,
		LUGARENTREGA INT,
		NOMBRELUGARENTREGA NVARCHAR(255),
		CVE_PRENDA NUMERIC(18,0),
		DESCRIPCIONPRENDA NVARCHAR(255),
		TIPOMATERIAL NVARCHAR(1),
		CVE_MATERIAL NVARCHAR(50),
		DESCRIPCIONMATERIAL NVARCHAR(255),
		CONSUMO NUMERIC(18,4),
		NO_PARCIALIDAD BIGINT,
		NO_ORDENCOMPRA NUMERIC(18,0),
		PARTIDA NUMERIC(18,0),
		CANTIDADPROMESA NUMERIC(18,4),
		FECHAPROMESA DATE,
		ASIGNACIONPROMESA NUMERIC(18,4),
		SALDOCONSUMO NUMERIC(18,4),
		SOBRANTEPROMESA NUMERIC(18,4)
	)

	CREATE TABLE #XPRIORIDAD
	(
		NO_PEDIDO BIGINT,
		PRIORIDAD INT,
		TIPOMATERIAL NVARCHAR(1),
		CVE_MATERIAL NVARCHAR(15),
		DESCRIPCIONMATERIAL NVARCHAR(255),
		CONSUMO NUMERIC(18,4),
		No_Parcialidad int,
		No_Parcialidad_Original int,
		OCPromesa NUMERIC(18,0),
		PartidaPromesa bigint,
		CantidadFechaPromesa numeric(18,4),
		FechaPromesa date,
		AsignacionPromesa numeric(18,4),
		SaldoConsumo numeric(18,4),
		SobrantePromesa numeric(18,4)
	)

	CREATE TABLE #XLUGARENTREGA
	(
		NO_PEDIDO BIGINT,
		PRIORIDAD INT,
		LUGARENTREGA BIGINT,
		NOMBRELUGARENTREGA NVARCHAR(255),
		TIPOMATERIAL NVARCHAR(1),
		CVE_MATERIAL NVARCHAR(15),
		DESCRIPCIONMATERIAL NVARCHAR(255),
		CONSUMO NUMERIC(18,4),
		No_Parcialidad int,
		No_Parcialidad_Original int,
		OCPromesa NUMERIC(18,0),
		PartidaPromesa bigint,
		CantidadFechaPromesa numeric(18,4),
		FechaPromesa date,
		AsignacionPromesa numeric(18,4),
		SaldoConsumo numeric(18,4),
		SobrantePromesa numeric(18,4)
	)

	CREATE TABLE #XCVEPRENDA
	(
		NO_PEDIDO BIGINT,
		PRIORIDAD INT,
		LUGARENTREGA BIGINT,
		NOMBRELUGARENTREGA NVARCHAR(255),
		CVE_PRENDA NUMERIC(18,0),
		DESCRIPCIONPRENDA NVARCHAR(255),
		TIPOMATERIAL NVARCHAR(1),
		CVE_MATERIAL NVARCHAR(15),
		DESCRIPCIONMATERIAL NVARCHAR(255),
		CONSUMO NUMERIC(18,4),
		No_Parcialidad int,
		No_Parcialidad_Original int,
		OCPromesa NUMERIC(18,0),
		PartidaPromesa bigint,
		CantidadFechaPromesa numeric(18,4),
		FechaPromesa date,
		AsignacionPromesa numeric(18,4),
		SaldoConsumo numeric(18,4),
		SobrantePromesa numeric(18,4)
	)
	--SE INICIALIZA EL @NO_PARCIALIDAD A 1 ANTES DE ENTRAR
	SET @NO_PARCIALIDAD = 1

	---SE HACE LA ASIGNACIÓN POR LUGAR DE ENTREGA Y PRIORIDAD
	---SE HACE POR CADA HABILITACIÓN Y TELA Y CADA LUGAR DE ENTREGA
	DECLARE LISTAOP CURSOR FOR
	SELECT
		NO_PEDIDO,
		TIPOMATERIAL,
		CVE_MATERIAL,
		DESCRIPCION,
		PRIORIDAD
	FROM
		#EMXOP
	--WHERE
	--	CVE_MATERIAL IN ('BOL000010')
	--AND PRIORIDAD IN (1,2,3,4,5,6)
	GROUP BY
		NO_PEDIDO,
		TIPOMATERIAL,
		CVE_MATERIAL,
		DESCRIPCION,
		PRIORIDAD
	ORDER BY
		TIPOMATERIAL,
		CVE_MATERIAL,
		PRIORIDAD
	OPEN LISTAOP
	FETCH NEXT FROM LISTAOP INTO @NO_PEDIDO,@TIPOMATERIAL,@CVE_MATERIAL,@DESCRIPCIONMATERIAL,@PRIORIDAD
	WHILE @@FETCH_STATUS = 0
	BEGIN
		--INICIALIZAMOS VARIABLES AUXILIARES
		SET @INVENTARIOAUX = 0
		
		--SE GUARDAN LOS REGISTROS AGRUPADOS POR PRIORIDAD DEL MATERIAL ACTUAL
		INSERT INTO #XPRIORIDAD
		(
			NO_PEDIDO,
			PRIORIDAD,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCIONMATERIAL,
			CONSUMO,
			SaldoConsumo
		)
		SELECT
			NO_PEDIDO,
			PRIORIDAD,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCION,
			SUM(CONSUMO),
			SUM(CONSUMO)
		FROM
			#EMXOP
		WHERE
			NO_PEDIDO = @NO_PEDIDO
		AND PRIORIDAD = @PRIORIDAD
		AND TIPOMATERIAL = @TIPOMATERIAL
		AND CVE_MATERIAL = @CVE_MATERIAL
		AND DESCRIPCION = @DESCRIPCIONMATERIAL
		GROUP BY
			NO_PEDIDO,
			PRIORIDAD,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCION


		--SE GUARDAN LOS REGISTROS AGRUPADOS POR PRIORIDAD Y LUGAR DE ENTREGA DEL MATERIAL ACTUAL
		INSERT INTO #XLUGARENTREGA
		(
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			NOMBRELUGARENTREGA,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCIONMATERIAL,
			CONSUMO,
			SaldoConsumo
		)
		SELECT
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			NOMBRELUGARDEENTREGA,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCION,
			SUM(CONSUMO),
			SUM(CONSUMO)
		FROM
			#EMXOP
		WHERE
			NO_PEDIDO = @NO_PEDIDO
		AND PRIORIDAD = @PRIORIDAD
		AND TIPOMATERIAL = @TIPOMATERIAL
		AND CVE_MATERIAL = @CVE_MATERIAL
		AND DESCRIPCION = @DESCRIPCIONMATERIAL
		GROUP BY
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			NOMBRELUGARDEENTREGA,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCION

		--SE GUARDAN LOS REGISTROS AGRUPADOS POR PRIORIDAD, LUGAR DE ENTREGA, Y CVE_PRENDA DEL MATERIAL ACTUAL
		INSERT INTO #XCVEPRENDA
		(
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			NOMBRELUGARENTREGA,
			CVE_PRENDA,
			DESCRIPCIONPRENDA,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCIONMATERIAL,
			CONSUMO,
			SaldoConsumo
		)
		SELECT
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			NOMBRELUGARDEENTREGA,
			CVE_PRENDA,
			DESCRIPCIONPRENDA,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCION,
			SUM(CONSUMO),
			SUM(CONSUMO)
		FROM
			#EMXOP
		WHERE
			NO_PEDIDO = @NO_PEDIDO
		AND PRIORIDAD = @PRIORIDAD
		AND TIPOMATERIAL = @TIPOMATERIAL
		AND CVE_MATERIAL = @CVE_MATERIAL
		AND DESCRIPCION = @DESCRIPCIONMATERIAL
		GROUP BY
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			NOMBRELUGARDEENTREGA,
			CVE_PRENDA,
			DESCRIPCIONPRENDA,
			TIPOMATERIAL,
			CVE_MATERIAL,
			DESCRIPCION

		----PRIMERO BUSCA SI HAY INVENTARIO RESERVADO PARA ESTE PEDIDO
		--IF @TIPOMATERIAL = 'T'
		--	SELECT @INVENTARIOAUX = ISNULL(STOCK,0)  FROM #INVENTARIOLUGARENTREGA WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_TELA = @CVE_MATERIAL
		--IF @TIPOMATERIAL = 'H'
		--	SELECT @INVENTARIOAUX = ISNULL(STOCK,0)  FROM #INVENTARIOLUGARENTREGA WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_GRUPO = SUBSTRING(@CVE_MATERIAL,1,3) AND CVE_HABILITACION = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))

		--IF @INVENTARIOAUX > 0
		--BEGIN
		--	IF @INVENTARIOAUX <= @CONSUMO
		--	BEGIN
		--		SET @CONSUMO = @CONSUMO-@INVENTARIOAUX
		--		IF @TIPOMATERIAL = 'T'
		--		BEGIN
		--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@INVENTARIOAUX WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_TELA = @CVE_MATERIAL
		--		END
		--		IF @TIPOMATERIAL = 'H'
		--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@INVENTARIOAUX WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_GRUPO = SUBSTRING(@CVE_MATERIAL,1,3) AND CVE_HABILITACION = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))
		--	END
		--	ELSE
		--	BEGIN
		--		IF @TIPOMATERIAL = 'T'
		--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@CONSUMO WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_TELA = @CVE_MATERIAL
		--		IF @TIPOMATERIAL = 'H'
		--			UPDATE #INVENTARIOLUGARENTREGA SET STOCK = STOCK-@CONSUMO WHERE NO_PEDIDO = @NO_PEDIDO AND CVE_GRUPO = SUBSTRING(@CVE_MATERIAL,1,3) AND CVE_HABILITACION = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))
		--		SET @CONSUMO = 0
		--	END
		--END
		---*******************************ITERACIÓN 1
		--IF @CONSUMO > 0
		--BEGIN

			--EMPIEZA PROCESO DE ITERACIONES
			--SE SELECCIONA EL @NO_PARCIALIDAD MÁS CHICO DEL MATERIAL ACTUAL DONDE HAYA SALDO
			SELECT TOP 1 @NO_PARCIALIDAD = OC.NO_PARCIALIDAD FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = @NO_PEDIDO AND OC.TIPOMATERIAL = @TIPOMATERIAL AND OC.CVE_MATERIAL = @CVE_MATERIAL AND OC.CANTIDADPROMESA > 0 ORDER BY NO_PARCIALIDAD ASC

			--CALCULA EL SOBRANTE DE CANTIDAD FECHA PROMESA DE ACUERDO AL NO_PARCIALIDAD
			UPDATE
				#XPRIORIDAD
			SET
				No_Parcialidad = OC.No_Parcialidad,
				No_Parcialidad_Original = OC.NO_PARCIALIDAD_ORIGINAL,
				OCPromesa = OC.NO_ORDENCOMPRA,
				PartidaPromesa = OC.PARTIDA,
				CantidadFechaPromesa = OC.CANTIDADPROMESA,
				FechaPromesa = OC.FECHAPROMESA,
				SobrantePromesa = OC.CANTIDADPROMESA-XP.SaldoConsumo
			FROM
				#XPRIORIDAD XP,
				#OCPARCIALIDADES OC
			WHERE
				XP.TIPOMATERIAL = OC.TIPOMATERIAL
			AND XP.CVE_MATERIAL = OC.CVE_MATERIAL
			AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD
			AND XP.PRIORIDAD = @PRIORIDAD
			--********************************************************************************			
			--SE CUENTAS LOS POSITIVOS Y LOS NEGATIVOS, DEBE SER O UNO POSITIVO O UNO NEGATIVO A FUERZA
			SELECT
				@CANTIDADPOSITIVAS = ISNULL(COUNT(*),0)
			FROM
				#XPRIORIDAD A
			WHERE
				A.NO_PEDIDO = @NO_PEDIDO
			AND A.PRIORIDAD = @PRIORIDAD
			AND TIPOMATERIAL = @TIPOMATERIAL
			AND CVE_MATERIAL = @CVE_MATERIAL
			AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
			AND	SobrantePromesa >= 0

			SELECT
				@CANTIDADNEGATIVAS = ISNULL(COUNT(*),0)
			FROM
				#XPRIORIDAD A
			WHERE
				A.NO_PEDIDO = @NO_PEDIDO
			AND A.PRIORIDAD = @PRIORIDAD
			AND TIPOMATERIAL = @TIPOMATERIAL
			AND CVE_MATERIAL = @CVE_MATERIAL
			AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
			AND	SobrantePromesa < 0

			IF @CANTIDADPOSITIVAS = 1 --INDICA QUE SE PUEDE ASIGNAR LA PARCIALIDAD COMPLETA EN LA PRIORIDAD ACTUAL
			BEGIN
				----INSERTA MOVIMIENTO EN LA TABLA DE ITERACIONES POR CADA UNA DE LAS FILAS HASTA CVE_PRENDA DE LA PRIORIDAD ACTUAL
				INSERT INTO #ITERACIONESOC
				(
					EMPRESA,
					NO_PEDIDO,
					PRIORIDAD,
					LUGARENTREGA,
					NOMBRELUGARENTREGA,
					CVE_PRENDA,
					DESCRIPCIONPRENDA,
					TIPOMATERIAL,
					CVE_MATERIAL,
					DESCRIPCIONMATERIAL,
					CONSUMO,
					NO_PARCIALIDAD,
					NO_ORDENCOMPRA,
					PARTIDA,
					CANTIDADPROMESA,
					FECHAPROMESA,
					ASIGNACIONPROMESA,
					SALDOCONSUMO,
					SOBRANTEPROMESA
				)
				SELECT
					@EMPRESA,
					EMLE.NO_PEDIDO,
					EMLE.PRIORIDAD,
					EMLE.LUGARENTREGA,
					EMLE.NOMBRELUGARDEENTREGA,
					EMLE.CVE_PRENDA,
					EMLE.DESCRIPCIONPRENDA,
					EMLE.TIPOMATERIAL,
					EMLE.CVE_MATERIAL,
					EMLE.DESCRIPCION,
					EMLE.CONSUMO,
					A.No_Parcialidad_Original,
					A.OCPromesa,
					A.PartidaPromesa,
					A.CantidadFechaPromesa,
					A.FechaPromesa,
					EMLE.CONSUMOSALDO,
					0,--ES 0 EL SALDO DE CONSUMO PORQUE SE ASIGNO COMPLETO CON LA PARCIALIDAD
					A.SobrantePromesa
				FROM
					#EMXOP EMLE,
					#XPRIORIDAD A
				WHERE
					EMLE.NO_PEDIDO = @NO_PEDIDO
				AND EMLE.TIPOMATERIAL = @TIPOMATERIAL
				AND EMLE.CVE_MATERIAL = @CVE_MATERIAL
				AND EMLE.DESCRIPCION = @DESCRIPCIONMATERIAL
				AND A.NO_PEDIDO = EMLE.NO_PEDIDO
				AND A.TIPOMATERIAL = EMLE.TIPOMATERIAL
				AND A.CVE_MATERIAL = EMLE.CVE_MATERIAL
				AND A.PRIORIDAD = EMLE.PRIORIDAD
				AND EMLE.PRIORIDAD = @PRIORIDAD
				AND EMLE.CONSUMOSALDO > 0

				--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
				UPDATE
					#EMXOP
				SET
					CONSUMOSALDO = 0
				FROM
					#EMXOP EMLE,
					#XPRIORIDAD A
				WHERE
					EMLE.NO_PEDIDO = @NO_PEDIDO
				AND EMLE.TIPOMATERIAL = @TIPOMATERIAL
				AND EMLE.CVE_MATERIAL = @CVE_MATERIAL
				AND EMLE.DESCRIPCION = @DESCRIPCIONMATERIAL
				AND A.TIPOMATERIAL = EMLE.TIPOMATERIAL
				AND A.CVE_MATERIAL = EMLE.CVE_MATERIAL
				AND A.PRIORIDAD = EMLE.PRIORIDAD
				AND EMLE.PRIORIDAD = @PRIORIDAD

				UPDATE
					#XPRIORIDAD
				SET
					SaldoConsumo = 0
				FROM
					#XPRIORIDAD A
				WHERE
					A.NO_PEDIDO = @NO_PEDIDO
				AND A.TIPOMATERIAL = @TIPOMATERIAL
				AND A.CVE_MATERIAL = @CVE_MATERIAL
				AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
				AND A.PRIORIDAD = @PRIORIDAD

				UPDATE
					#XLUGARENTREGA
				SET
					SaldoConsumo = 0
				FROM
					#XLUGARENTREGA A
				WHERE
					A.NO_PEDIDO = @NO_PEDIDO
				AND A.TIPOMATERIAL = @TIPOMATERIAL
				AND A.CVE_MATERIAL = @CVE_MATERIAL
				AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
				AND A.PRIORIDAD = @PRIORIDAD

				UPDATE
					#XCVEPRENDA
				SET
					SaldoConsumo = 0
				FROM
					#XCVEPRENDA A
				WHERE
					A.NO_PEDIDO = @NO_PEDIDO
				AND A.TIPOMATERIAL = @TIPOMATERIAL
				AND A.CVE_MATERIAL = @CVE_MATERIAL
				AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
				AND A.PRIORIDAD = @PRIORIDAD
				
				--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
				UPDATE
					#OCPARCIALIDADES
				SET
					CANTIDADPROMESA = A.SobrantePromesa
				FROM
					#XPRIORIDAD A,
					#OCPARCIALIDADES OCFP
				WHERE
					A.NO_PEDIDO = @NO_PEDIDO
				AND	A.TIPOMATERIAL = OCFP.TIPOMATERIAL
				AND A.CVE_MATERIAL = OCFP.CVE_MATERIAL
				AND A.DESCRIPCIONMATERIAL = OCFP.DESCRIPCION_MATERIAL
				AND A.PRIORIDAD = @PRIORIDAD
				AND OCFP.NO_PARCIALIDAD = A.No_Parcialidad
				AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
				AND OCFP.PARTIDA = A.PartidaPromesa
				AND OCFP.FECHAPROMESA = A.FechaPromesa
			END
			
			--SI SE LLEGA A CUMPLIR ESTA CONDICIÓN, QUIERE DECIR QUE LA CANTIDAD DE LA PARCIALIDAD ACTUAL NO ALCANZA PARA SURTIR LA
			--PRIORIDAD COMPLETA, SE ENTRA AL SIGUIENTE NIVEL POR LUGAR DE ENTREGA Y SE HACE EL MISMO PROCESO CON LA
			--PARCIALIDAD ACTUAL HASTA QUE SE ASIGNÉ COMPLETA
			IF @CANTIDADNEGATIVAS = 1
			BEGIN

				CICLOLUGARENTREGA:
				--CALCULA EL SOBRANTE DE CANTIDAD FECHA PROMESA DE ACUERDO A LA PRIORIDAD Y NO_PARCIALIDAD

				UPDATE
					#XLUGARENTREGA
				SET
					No_Parcialidad = OC.No_Parcialidad,
					No_Parcialidad_Original = OC.NO_PARCIALIDAD_ORIGINAL,
					OCPromesa = OC.NO_ORDENCOMPRA,
					PartidaPromesa = OC.PARTIDA,
					CantidadFechaPromesa = OC.CANTIDADPROMESA,
					FechaPromesa = OC.FECHAPROMESA,
					SobrantePromesa = OC.CANTIDADPROMESA-XP.SaldoConsumo
				FROM
					#XLUGARENTREGA XP,
					#OCPARCIALIDADES OC
				WHERE
					XP.TIPOMATERIAL = OC.TIPOMATERIAL
				AND XP.CVE_MATERIAL = OC.CVE_MATERIAL
				AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD
				AND XP.PRIORIDAD = @PRIORIDAD
				AND XP.SaldoConsumo > 0

				--********************************************************************************			
				--SE CUENTAS LOS POSITIVOS Y LOS NEGATIVOS, AQUI SI PUEDE HABER MÁS DE UN POSITIVO Y MÁS DE UN NEGATIVO
				SELECT
					@CANTIDADPOSITIVAS = ISNULL(COUNT(*),0)
				FROM
					#XLUGARENTREGA A
				WHERE
					A.NO_PEDIDO = @NO_PEDIDO
				AND A.PRIORIDAD = @PRIORIDAD
				AND TIPOMATERIAL = @TIPOMATERIAL
				AND CVE_MATERIAL = @CVE_MATERIAL
				AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
				AND SaldoConsumo > 0
				AND	SobrantePromesa >= 0

				SELECT
					@CANTIDADNEGATIVAS = ISNULL(COUNT(*),0)
				FROM
					#XLUGARENTREGA A
				WHERE
					A.NO_PEDIDO = @NO_PEDIDO
				AND A.PRIORIDAD = @PRIORIDAD
				AND TIPOMATERIAL = @TIPOMATERIAL
				AND CVE_MATERIAL = @CVE_MATERIAL
				AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
				AND SaldoConsumo > 0
				AND	SobrantePromesa < 0

				IF @CANTIDADPOSITIVAS > 0 --INDICA QUE SE PUEDE ASIGNAR UN LUGAR DE ENTREGA COMPLETO
				BEGIN
					--INSERTA MOVIMIENTO EN LA TABLA DE ITERACIONES POR CADA UNA DE LAS FILAS HASTA CVE_PRENDA DEL LUGAR DE ENTREGA
					--QUE SE PUEDE ASIGNAR COMPLETO SELECCIONANDO EL QUE TIENE LA CANTIDAD SOBRANTE MENOR POSITIVO
					INSERT INTO #ITERACIONESOC
					(
						EMPRESA,
						NO_PEDIDO,
						PRIORIDAD,
						LUGARENTREGA,
						NOMBRELUGARENTREGA,
						CVE_PRENDA,
						DESCRIPCIONPRENDA,
						TIPOMATERIAL,
						CVE_MATERIAL,
						DESCRIPCIONMATERIAL,
						CONSUMO,
						NO_PARCIALIDAD,
						NO_ORDENCOMPRA,
						PARTIDA,
						CANTIDADPROMESA,
						FECHAPROMESA,
						ASIGNACIONPROMESA,
						SALDOCONSUMO,
						SOBRANTEPROMESA
					)
					SELECT
						@EMPRESA,
						EMLE.NO_PEDIDO,
						EMLE.PRIORIDAD,
						EMLE.LUGARENTREGA,
						EMLE.NOMBRELUGARDEENTREGA,
						EMLE.CVE_PRENDA,
						EMLE.DESCRIPCIONPRENDA,
						EMLE.TIPOMATERIAL,
						EMLE.CVE_MATERIAL,
						EMLE.DESCRIPCION,
						EMLE.CONSUMO,
						A.No_Parcialidad_Original,
						A.OCPromesa,
						A.PartidaPromesa,
						A.CantidadFechaPromesa,
						A.FechaPromesa,
						EMLE.CONSUMOSALDO,
						0,--ES 0 EL SALDO DE CONSUMO PORQUE SE ASIGNO COMPLETO EL LUGAR DE ENTREGA
						A.SobrantePromesa
					FROM
						#EMXOP EMLE,
						#XLUGARENTREGA A
					WHERE
						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND EMLE.NO_PEDIDO = A.NO_PEDIDO
					AND EMLE.LUGARENTREGA = A.LUGARENTREGA
					AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
					AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
					AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
					AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
					AND EMLE.PRIORIDAD = @PRIORIDAD
					AND A.PRIORIDAD = @PRIORIDAD
					AND EMLE.CONSUMOSALDO > 0

					--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
					UPDATE
						#OCPARCIALIDADES
					SET
						CANTIDADPROMESA = A.SobrantePromesa
					FROM
						#XLUGARENTREGA A,
						#OCPARCIALIDADES OCFP
					WHERE
						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.PRIORIDAD = @PRIORIDAD
					AND OCFP.NO_PARCIALIDAD = @NO_PARCIALIDAD
					AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
					AND OCFP.PARTIDA = A.PartidaPromesa
					AND OCFP.FECHAPROMESA = A.FechaPromesa

					--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
					UPDATE
						#EMXOP
					SET
						CONSUMOSALDO = 0
					FROM
						#EMXOP EMLE,
						#XLUGARENTREGA A
					WHERE
						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND	EMLE.NO_PEDIDO = A.NO_PEDIDO
					AND EMLE.LUGARENTREGA = A.LUGARENTREGA
					AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
					AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
					AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
					AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
					AND EMLE.PRIORIDAD = @PRIORIDAD
					AND A.PRIORIDAD = @PRIORIDAD

					--ACTUALIZA SALDO, SOLO RESTANDO EL CONSUMO DEL LUGAR DE ENTREGA
					UPDATE
						#XPRIORIDAD
					SET
						SaldoConsumo = SaldoConsumo - (SELECT TOP 1 XLE.SaldoConsumo FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					FROM
						#XPRIORIDAD A
					WHERE
						A.NO_PEDIDO = @NO_PEDIDO
					AND A.TIPOMATERIAL = @TIPOMATERIAL
					AND A.CVE_MATERIAL = @CVE_MATERIAL
					AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
					AND A.PRIORIDAD = @PRIORIDAD

					--ACTUALIZA EL SALDO EN 0 DE LAS CLAVES DE PRENDA QUE COMPRENDE EL LUGAR DE ENTREGA
					UPDATE
						#XCVEPRENDA
					SET
						SaldoConsumo = 0
					FROM
						#XCVEPRENDA A
					WHERE
						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.PRIORIDAD = @PRIORIDAD

					--ACTUALIZA EL SALDO EN 0 DEL LUGAR DE ENTREGA QUE SE PUDO ASIGNAR
					UPDATE
						#XLUGARENTREGA
					SET
						SaldoConsumo = 0
					FROM
						#XLUGARENTREGA A
					WHERE
						A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XLUGARENTREGA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
					AND A.PRIORIDAD = @PRIORIDAD
				
					--SE REINICIA EL CICLO PARA PROBAR CON OTRO LUGAR DE ENTREGA SI ES QUE AÚN HAY
					GOTO CICLOLUGARENTREGA
				END

				--AQUI ENTRA EN CASO DE QUE YA NO SE CUBRA NI UN LUGAR DE ENTREGA DE LA PRIORIDAD ACTUAL
				--SE PASA AL SIGUIENTE NIVEL QUE ES POR CLAVE DE PRENDA
				IF @CANTIDADPOSITIVAS = 0 AND @CANTIDADNEGATIVAS > 0
				BEGIN
					--SE INTENTA ASIGNAR EL SALDO EN EL SIGUIENTE 
					CICLOCVEPRENDA:
					--SE SELECCIONA EL @NO_PARCIALIDAD MÁS CHICO DEL MATERIAL ACTUAL DONDE HAYA SALDO
					SELECT TOP 1 @NO_PARCIALIDAD = OC.NO_PARCIALIDAD FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = @NO_PEDIDO AND OC.TIPOMATERIAL = @TIPOMATERIAL AND OC.CVE_MATERIAL = @CVE_MATERIAL AND OC.CANTIDADPROMESA > 0 ORDER BY NO_PARCIALIDAD ASC

					--CALCULA EL SOBRANTE DE CANTIDAD FECHA PROMESA DE ACUERDO A LA PRIORIDAD Y NO_PARCIALIDAD EN CVE_PRENDA

					UPDATE
						#XCVEPRENDA
					SET
						No_Parcialidad = OC.No_Parcialidad,
						No_Parcialidad_Original = OC.No_Parcialidad_Original,
						OCPromesa = OC.NO_ORDENCOMPRA,
						PartidaPromesa = OC.PARTIDA,
						CantidadFechaPromesa = OC.CANTIDADPROMESA,
						FechaPromesa = OC.FECHAPROMESA,
						SobrantePromesa = OC.CANTIDADPROMESA-XP.SaldoConsumo
					FROM
						#XCVEPRENDA XP,
						#OCPARCIALIDADES OC
					WHERE
						XP.TIPOMATERIAL = OC.TIPOMATERIAL
					AND XP.CVE_MATERIAL = OC.CVE_MATERIAL
					AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD
					AND XP.PRIORIDAD = @PRIORIDAD
					AND XP.SaldoConsumo > 0

					--SE CUENTAS LOS POSITIVOS Y LOS NEGATIVOS, AQUI SI PUEDE HABER MÁS DE UN POSITIVO Y MÁS DE UN NEGATIVO
					SELECT
						@CANTIDADPOSITIVAS = ISNULL(COUNT(*),0)
					FROM
						#XCVEPRENDA A
					WHERE
						A.NO_PEDIDO = @NO_PEDIDO
					AND A.PRIORIDAD = @PRIORIDAD
					AND TIPOMATERIAL = @TIPOMATERIAL
					AND CVE_MATERIAL = @CVE_MATERIAL
					AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
					AND SaldoConsumo > 0
					AND	SobrantePromesa >= 0

					SELECT
						@CANTIDADNEGATIVAS = ISNULL(COUNT(*),0)
					FROM
						#XCVEPRENDA A
					WHERE
						A.NO_PEDIDO = @NO_PEDIDO
					AND A.PRIORIDAD = @PRIORIDAD
					AND TIPOMATERIAL = @TIPOMATERIAL
					AND CVE_MATERIAL = @CVE_MATERIAL
					AND DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
					AND SaldoConsumo > 0
					AND	SobrantePromesa < 0

					IF @CANTIDADPOSITIVAS > 0 --INDICA QUE SE PUEDE ASIGNAR EN UNA CVE_PRENDA COMPLETA
					BEGIN
						--INSERTA MOVIMIENTO EN LA TABLA DE ITERACIONES POR CADA UNA DE LAS FILAS DE LA CVE_PRENDA
						--QUE SE PUEDE ASIGNAR COMPLETO SELECCIONANDO EL QUE TIENE LA CANTIDAD SOBRANTE MENOR POSITIVO
						
						INSERT INTO #ITERACIONESOC
						(
							EMPRESA,
							NO_PEDIDO,
							PRIORIDAD,
							LUGARENTREGA,
							NOMBRELUGARENTREGA,
							CVE_PRENDA,
							DESCRIPCIONPRENDA,
							TIPOMATERIAL,
							CVE_MATERIAL,
							DESCRIPCIONMATERIAL,
							CONSUMO,
							NO_PARCIALIDAD,
							NO_ORDENCOMPRA,
							PARTIDA,
							CANTIDADPROMESA,
							FECHAPROMESA,
							ASIGNACIONPROMESA,
							SALDOCONSUMO,
							SOBRANTEPROMESA
						)
						SELECT
							@EMPRESA,
							EMLE.NO_PEDIDO,
							EMLE.PRIORIDAD,
							EMLE.LUGARENTREGA,
							EMLE.NOMBRELUGARDEENTREGA,
							EMLE.CVE_PRENDA,
							EMLE.DESCRIPCIONPRENDA,
							EMLE.TIPOMATERIAL,
							EMLE.CVE_MATERIAL,
							EMLE.DESCRIPCION,
							EMLE.CONSUMO,
							A.No_Parcialidad_Original,
							A.OCPromesa,
							A.PartidaPromesa,
							A.CantidadFechaPromesa,
							A.FechaPromesa,
							EMLE.CONSUMOSALDO,
							0,--ES 0 EL SALDO DE CONSUMO PORQUE SE ASIGNO COMPLETO EL LUGAR DE ENTREGA
							A.SobrantePromesa
						FROM
							#EMXOP EMLE,
							#XCVEPRENDA A
						WHERE
							A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND EMLE.NO_PEDIDO = A.NO_PEDIDO
						AND EMLE.LUGARENTREGA = A.LUGARENTREGA
						AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
						AND EMLE.CVE_PRENDA = A.CVE_PRENDA
						AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
						AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
						AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
						AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
						AND EMLE.PRIORIDAD = @PRIORIDAD
						AND A.PRIORIDAD = @PRIORIDAD
						AND EMLE.CONSUMOSALDO > 0

						--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
						UPDATE
							#OCPARCIALIDADES
						SET
							CANTIDADPROMESA = A.SobrantePromesa
						FROM
							#XCVEPRENDA A,
							#OCPARCIALIDADES OCFP
						WHERE
							A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.PRIORIDAD = @PRIORIDAD
						AND OCFP.NO_PARCIALIDAD = @NO_PARCIALIDAD
						AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
						AND OCFP.PARTIDA = A.PartidaPromesa
						AND OCFP.FECHAPROMESA = A.FechaPromesa

						--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
						UPDATE
							#EMXOP
						SET
							CONSUMOSALDO = 0
						FROM
							#EMXOP EMLE,
							#XCVEPRENDA A
						WHERE
							A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND	EMLE.NO_PEDIDO = A.NO_PEDIDO
						AND EMLE.LUGARENTREGA = A.LUGARENTREGA
						AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
						AND EMLE.CVE_PRENDA = A.CVE_PRENDA
						AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
						AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
						AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
						AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
						AND EMLE.PRIORIDAD = @PRIORIDAD
						AND A.PRIORIDAD = @PRIORIDAD

						--ACTUALIZA SALDO, SOLO RESTANDO EL CONSUMO DE LA CLAVE DE PRENDA
						UPDATE
							#XPRIORIDAD
						SET
							SaldoConsumo = SaldoConsumo - (SELECT TOP 1 XLE.SaldoConsumo FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						FROM
							#XPRIORIDAD A
						WHERE
							A.NO_PEDIDO = @NO_PEDIDO
						AND A.TIPOMATERIAL = @TIPOMATERIAL
						AND A.CVE_MATERIAL = @CVE_MATERIAL
						AND A.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL
						AND A.PRIORIDAD = @PRIORIDAD

						--ACTUALIZA EL SALDO CONSUMO RESTANDO LO QUE SE PUDO ASIGNAR DE LA CVE_PRENDA
						UPDATE
							#XLUGARENTREGA
						SET
							SaldoConsumo = SaldoConsumo - (SELECT TOP 1 XLE.SaldoConsumo FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						FROM
							#XLUGARENTREGA A
						WHERE
							A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.PRIORIDAD = @PRIORIDAD

						--ACTUALIZA EL SALDO EN 0 DE LA CLAVE DE PRENDA QUE SE PUDO ASIGNAR
						UPDATE
							#XCVEPRENDA
						SET
							SaldoConsumo = 0
						FROM
							#XCVEPRENDA A
						WHERE
							A.NO_PEDIDO = (SELECT TOP 1 XLE.NO_PEDIDO FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.LUGARENTREGA = (SELECT TOP 1 XLE.LUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.NOMBRELUGARENTREGA = (SELECT TOP 1 XLE.NOMBRELUGARENTREGA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_PRENDA = (SELECT TOP 1 XLE.CVE_PRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONPRENDA = (SELECT TOP 1 XLE.DESCRIPCIONPRENDA FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.TIPOMATERIAL = (SELECT TOP 1 XLE.TIPOMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.CVE_MATERIAL = (SELECT TOP 1 XLE.CVE_MATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.DESCRIPCIONMATERIAL = (SELECT TOP 1 XLE.DESCRIPCIONMATERIAL FROM #XCVEPRENDA XLE WHERE XLE.NO_PEDIDO = @NO_PEDIDO AND XLE.TIPOMATERIAL = @TIPOMATERIAL AND XLE.CVE_MATERIAL = @CVE_MATERIAL AND XLE.DESCRIPCIONMATERIAL = @DESCRIPCIONMATERIAL AND XLE.PRIORIDAD = @PRIORIDAD AND XLE.SaldoConsumo > 0 AND XLE.SobrantePromesa >= 0 ORDER BY XLE.SobrantePromesa ASC)
						AND A.PRIORIDAD = @PRIORIDAD
				
						--SE REINICIA EL CICLO PARA PROBAR CON OTRO LUGAR DE ENTREGA SI ES QUE AÚN HAY
						GOTO CICLOCVEPRENDA
					END

					--ENTRA A ESTA CONDICION CUANDO TERMINO DE ASIGNAR POR CLAVE DE PRENDA Y AUN QUEDAN POR ASIGNAR
					IF @CANTIDADPOSITIVAS = 0 AND @CANTIDADNEGATIVAS > 0
					BEGIN
						--ENTRA CUANDO YA NI UN SALDO ALCANZA A CUBRIR LA TOTALIDAD DE UNA CLAVE DE PRENDA
						--SE ASIGNAN LOS SALDOS RESTANTES
						DECLARE FILASASIGNASALDOS CURSOR FOR
						SELECT 
							LUGARENTREGA,
							CVE_PRENDA
						FROM 
							#EMXOP
						WHERE 
							NO_PEDIDO = @NO_PEDIDO
						AND TIPOMATERIAL = @TIPOMATERIAL 
						AND CVE_MATERIAL = @CVE_MATERIAL 
						AND CONSUMOSALDO > 0
						OPEN FILASASIGNASALDOS
						FETCH NEXT FROM FILASASIGNASALDOS INTO @LUGARENTREGA,@CVE_PRENDA
						WHILE @@FETCH_STATUS = 0
						BEGIN
							--SE ACTUALIZA EL SOBRANTE DE LA CANTIDAD PROMESA,
							--POR LO QUE SE ASIGNA AL QUE QUEDA MÁS CERCA DEL 0
						CICLOASIGNASALDOS:

							UPDATE
								#XCVEPRENDA
							SET
								No_Parcialidad = (SELECT OC.NO_PARCIALIDAD FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
								No_Parcialidad_Original = (SELECT OC.NO_PARCIALIDAD_ORIGINAL FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
								OCPromesa = (SELECT TOP 1 OC.NO_ORDENCOMPRA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
								PartidaPromesa = (SELECT TOP 1 OC.PARTIDA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
								CantidadFechaPromesa = (SELECT TOP 1 OC.CANTIDADPROMESA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
								FechaPromesa = (SELECT TOP 1 OC.FECHAPROMESA FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD),
								SobrantePromesa = (SELECT TOP 1 OC.CANTIDADPROMESA-XP.SaldoConsumo FROM #OCPARCIALIDADES OC WHERE OC.NO_PEDIDO = XP.NO_PEDIDO AND OC.TIPOMATERIAL = XP.TIPOMATERIAL AND OC.CVE_MATERIAL = XP.CVE_MATERIAL AND OC.NO_PARCIALIDAD = @NO_PARCIALIDAD)
							FROM
								#XCVEPRENDA XP
							WHERE
								XP.NO_PEDIDO = @NO_PEDIDO
							AND XP.PRIORIDAD = @PRIORIDAD
							AND XP.LUGARENTREGA = @LUGARENTREGA
							AND XP.CVE_PRENDA = @CVE_PRENDA
							AND	XP.TIPOMATERIAL = @TIPOMATERIAL
							AND XP.CVE_MATERIAL = @CVE_MATERIAL
							AND XP.SaldoConsumo > 0

							--INSERTA EL MOVIMIENTO EN LA TABLA DE #ITERACIONES
							INSERT INTO #ITERACIONESOC
							(
								EMPRESA,
								NO_PEDIDO,
								PRIORIDAD,
								LUGARENTREGA,
								NOMBRELUGARENTREGA,
								CVE_PRENDA,
								DESCRIPCIONPRENDA,
								TIPOMATERIAL,
								CVE_MATERIAL,
								DESCRIPCIONMATERIAL,
								CONSUMO,
								NO_PARCIALIDAD,
								NO_ORDENCOMPRA,
								PARTIDA,
								CANTIDADPROMESA,
								FECHAPROMESA,
								ASIGNACIONPROMESA,
								SALDOCONSUMO,
								SOBRANTEPROMESA
							)
							SELECT
								@EMPRESA,
								EMLE.NO_PEDIDO,
								EMLE.PRIORIDAD,
								EMLE.LUGARENTREGA,
								EMLE.NOMBRELUGARDEENTREGA,
								EMLE.CVE_PRENDA,
								EMLE.DESCRIPCIONPRENDA,
								EMLE.TIPOMATERIAL,
								EMLE.CVE_MATERIAL,
								EMLE.DESCRIPCION,
								EMLE.CONSUMO,
								A.No_Parcialidad_Original,
								A.OCPromesa,
								A.PartidaPromesa,
								A.CantidadFechaPromesa,
								A.FechaPromesa,
								CASE WHEN EMLE.CONSUMOSALDO >= A.CantidadFechaPromesa THEN A.CantidadFechaPromesa ELSE EMLE.CONSUMOSALDO END,
								CASE WHEN EMLE.CONSUMOSALDO >= A.CantidadFechaPromesa THEN EMLE.CONSUMOSALDO-A.CantidadFechaPromesa ELSE 0 END,
								CASE WHEN EMLE.CONSUMOSALDO >= A.CantidadFechaPromesa THEN 0 ELSE A.CantidadFechaPromesa-EMLE.CONSUMOSALDO END
							FROM
								#EMXOP EMLE,
								#XCVEPRENDA A
							WHERE
								A.NO_PEDIDO = @NO_PEDIDO
							AND A.PRIORIDAD = @PRIORIDAD
							AND A.LUGARENTREGA = @LUGARENTREGA
							AND A.CVE_PRENDA = @CVE_PRENDA
							AND A.TIPOMATERIAL = @TIPOMATERIAL
							AND A.CVE_MATERIAL = @CVE_MATERIAL
							AND EMLE.NO_PEDIDO = A.NO_PEDIDO
							AND EMLE.LUGARENTREGA = A.LUGARENTREGA
							AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
							AND EMLE.CVE_PRENDA = A.CVE_PRENDA
							AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
							AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
							AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
							AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL
							AND EMLE.CONSUMOSALDO > 0
									
							--ACTUALIZA LA CANTIDADPROMESA EN LA TABLA AUXILIAR #OCPARCIALIDADES
							UPDATE
								#OCPARCIALIDADES
							SET
								CANTIDADPROMESA = CASE WHEN A.SaldoConsumo >= A.CantidadFechaPromesa THEN 0 ELSE A.CantidadFechaPromesa-A.SaldoConsumo END
							FROM
								#XCVEPRENDA A,
								#OCPARCIALIDADES OCFP
							WHERE
								A.NO_PEDIDO = @NO_PEDIDO
							AND A.PRIORIDAD = @PRIORIDAD
							AND A.LUGARENTREGA = @LUGARENTREGA
							AND A.CVE_PRENDA = @CVE_PRENDA
							AND A.TIPOMATERIAL = @TIPOMATERIAL
							AND A.CVE_MATERIAL = @CVE_MATERIAL
							AND OCFP.NO_PARCIALIDAD = A.No_Parcialidad
							AND OCFP.NO_ORDENCOMPRA = A.OCPromesa
							AND OCFP.PARTIDA = A.PartidaPromesa
							AND OCFP.FECHAPROMESA = A.FechaPromesa

							--ACTUALIZA EL SALDO DE CONSUMO DE LA TABLA PRINCIPAL Y AUXILIARES
							UPDATE
								#EMXOP
							SET
								CONSUMOSALDO = CASE WHEN A.SaldoConsumo >= A.CantidadFechaPromesa THEN A.SaldoConsumo-A.CantidadFechaPromesa ELSE 0 END
							FROM
								#EMXOP EMLE,
								#XCVEPRENDA A
							WHERE
								A.NO_PEDIDO = @NO_PEDIDO
							AND A.PRIORIDAD = @PRIORIDAD
							AND A.LUGARENTREGA = @LUGARENTREGA
							AND A.CVE_PRENDA = @CVE_PRENDA
							AND A.TIPOMATERIAL = @TIPOMATERIAL
							AND A.CVE_MATERIAL = @CVE_MATERIAL
							AND	EMLE.NO_PEDIDO = A.NO_PEDIDO
							AND EMLE.LUGARENTREGA = A.LUGARENTREGA
							AND EMLE.NOMBRELUGARDEENTREGA = A.NOMBRELUGARENTREGA
							AND EMLE.CVE_PRENDA = A.CVE_PRENDA
							AND EMLE.DESCRIPCIONPRENDA = A.DESCRIPCIONPRENDA
							AND EMLE.TIPOMATERIAL = A.TIPOMATERIAL
							AND EMLE.CVE_MATERIAL = A.CVE_MATERIAL
							AND EMLE.DESCRIPCION = A.DESCRIPCIONMATERIAL

							--ACTUALIZA SALDO
							UPDATE
								#XPRIORIDAD
							SET
								SaldoConsumo = CASE WHEN XCP.SaldoConsumo >= XCP.CantidadFechaPromesa THEN A.SaldoConsumo-XCP.CantidadFechaPromesa ELSE A.SaldoConsumo-XCP.SaldoConsumo END
							FROM
								#XPRIORIDAD A,
								#XCVEPRENDA XCP
							WHERE
								A.NO_PEDIDO = @NO_PEDIDO
							AND A.PRIORIDAD = @PRIORIDAD
							AND A.TIPOMATERIAL = @TIPOMATERIAL
							AND A.CVE_MATERIAL = @CVE_MATERIAL
							AND XCP.NO_PEDIDO = A.NO_PEDIDO
							AND XCP.PRIORIDAD = A.PRIORIDAD
							AND XCP.LUGARENTREGA = @LUGARENTREGA
							AND XCP.CVE_PRENDA = @CVE_PRENDA

							--ACTUALIZA EL SALDO CONSUMO RESTANDO LO QUE SE PUDO ASIGNAR DE LA CVE_PRENDA
							UPDATE
								#XLUGARENTREGA
							SET
								SaldoConsumo = CASE WHEN XCP.SaldoConsumo >= XCP.CantidadFechaPromesa THEN A.SaldoConsumo-XCP.CantidadFechaPromesa ELSE A.SaldoConsumo-XCP.SaldoConsumo END
							FROM
								#XLUGARENTREGA A,
								#XCVEPRENDA XCP
							WHERE
								A.NO_PEDIDO = @NO_PEDIDO
							AND A.PRIORIDAD = @PRIORIDAD
							AND A.LUGARENTREGA = @LUGARENTREGA
							AND A.TIPOMATERIAL = @TIPOMATERIAL
							AND A.CVE_MATERIAL = @CVE_MATERIAL
							AND XCP.NO_PEDIDO = A.NO_PEDIDO
							AND XCP.PRIORIDAD = A.PRIORIDAD
							AND XCP.LUGARENTREGA = A.LUGARENTREGA
							AND XCP.CVE_PRENDA = @CVE_PRENDA

							--ACTUALIZA EL SALDO DE LA CLAVE DE PRENDA QUE SE ASIGNÓ
							UPDATE
								#XCVEPRENDA
							SET
								SaldoConsumo = CASE WHEN A.SaldoConsumo >= A.CantidadFechaPromesa THEN A.SaldoConsumo-A.CantidadFechaPromesa ELSE 0 END
							FROM
								#XCVEPRENDA A
							WHERE
								A.NO_PEDIDO = @NO_PEDIDO
							AND A.PRIORIDAD = @PRIORIDAD
							AND A.LUGARENTREGA = @LUGARENTREGA
							AND A.CVE_PRENDA = @CVE_PRENDA
							AND A.TIPOMATERIAL = @TIPOMATERIAL
							AND A.CVE_MATERIAL = @CVE_MATERIAL

							IF EXISTS(SELECT * FROM #OCPARCIALIDADES WHERE NO_PEDIDO = @NO_PEDIDO AND TIPOMATERIAL = @TIPOMATERIAL AND CVE_MATERIAL = @CVE_MATERIAL AND NO_PARCIALIDAD = @NO_PARCIALIDAD AND CANTIDADPROMESA = 0)
								SET @NO_PARCIALIDAD += 1

							IF EXISTS(SELECT * FROM #XCVEPRENDA WHERE NO_PEDIDO = @NO_PEDIDO AND PRIORIDAD = @PRIORIDAD AND LUGARENTREGA = @LUGARENTREGA AND CVE_PRENDA = @CVE_PRENDA AND SaldoConsumo > 0)
								GOTO CICLOASIGNASALDOS

							FETCH NEXT FROM FILASASIGNASALDOS INTO @LUGARENTREGA,@CVE_PRENDA
						END
						CLOSE FILASASIGNASALDOS
						DEALLOCATE FILASASIGNASALDOS	
						
					END
				END
			END
			--ESTE CASO SE DA CUANDO LA PARCIALIDAD NO ALCANZA PARA ASIGNAR LA PRIORIDAD COMPLETA
			--SE MANDA EL MENSAJE AL USUARIO PARA QUE DECIDA COMO SE VA A ASIGNAR
		--END
			--SE BORRA #XPRIORIDAD PARA TRABAJAR CON EL SIGUIENTE MATERIAL
			DELETE #XPRIORIDAD
			DELETE #XLUGARENTREGA
			DELETE #XCVEPRENDA
		FETCH NEXT FROM LISTAOP INTO @NO_PEDIDO,@TIPOMATERIAL,@CVE_MATERIAL,@DESCRIPCIONMATERIAL,@PRIORIDAD
	END
	CLOSE LISTAOP
	DEALLOCATE LISTAOP

	---**************************************************************************************************************************************
	--**************TERMINA EL CODIGO NUEVO INSERTADO EL 10/11/2022


	--ACTUALIZA FECHAS DE ASIGNACIÓN
	UPDATE
		#EMXOP
	SET
		FECHAASIGNACION = (SELECT MAX(FECHAPROMESA) FROM #ITERACIONESOC IOC WHERE #EMXOP.NO_PEDIDO = IOC.NO_PEDIDO AND #EMXOP.PRIORIDAD = IOC.PRIORIDAD AND #EMXOP.LUGARENTREGA = IOC.LUGARENTREGA AND #EMXOP.NOMBRELUGARDEENTREGA = IOC.NOMBRELUGARENTREGA AND #EMXOP.CVE_PRENDA = IOC.CVE_PRENDA AND #EMXOP.DESCRIPCIONPRENDA = IOC.DESCRIPCIONPRENDA AND #EMXOP.TIPOMATERIAL = IOC.TIPOMATERIAL AND #EMXOP.CVE_MATERIAL = IOC.CVE_MATERIAL),
		LOTES = (SELECT COUNT(*) FROM #ITERACIONESOC IOC WHERE #EMXOP.NO_PEDIDO = IOC.NO_PEDIDO AND #EMXOP.PRIORIDAD = IOC.PRIORIDAD AND #EMXOP.LUGARENTREGA = IOC.LUGARENTREGA AND #EMXOP.NOMBRELUGARDEENTREGA = IOC.NOMBRELUGARENTREGA AND #EMXOP.CVE_PRENDA = IOC.CVE_PRENDA AND #EMXOP.DESCRIPCIONPRENDA = IOC.DESCRIPCIONPRENDA AND #EMXOP.TIPOMATERIAL = IOC.TIPOMATERIAL AND #EMXOP.CVE_MATERIAL = IOC.CVE_MATERIAL)
	
	--CALCULO DE DISTRIBUCIÓN DE OP
	--***********************************EMPIEZA PROCESO PARA PRIORIDAD*******************************************************************
	--SE DECLARAN VARIABLES AUXILIARES QUE SE USARAN EN EL CURSOR
	DECLARE
		@NO_PEDIDOANT BIGINT,
		@PRIORIDADANT INT = 0,
		@LUGARENTREGAANT INT = 0,
		@CVE_PRENDAANT BIGINT = 0,
		@FECHAASIGNACION DATE,
		@LOTES BIGINT,
		@NO_OP INT,
		@CONSECUTIVO INT,
		@QUERY_FROM NVARCHAR(MAX) = '',
		@QUERY_WHERE NVARCHAR(MAX) = '',
		@QUERY NVARCHAR(MAX) = ''

	CREATE TABLE #AUXQUERY_PRIORIDAD
	(
		NO_PEDIDO NUMERIC(18,0),
		PRIORIDAD BIGINT,
		LUGARENTREGA BIGINT,
		CVE_PRENDA NUMERIC(18,0),
		QUERY NVARCHAR(MAX)
	)

	SET @PRIORIDADANT = 0
	SET @LUGARENTREGAANT = 0
	SET @CVE_PRENDAANT = 0
	SET @QUERY_FROM = ''
	SET @QUERY_WHERE = ''

	--CURSOR PARA GENERAR LOS QUERYS PARA AGRUPAR LAS OP
	DECLARE PARTIDASTELAS CURSOR FOR
	SELECT
		NO_PEDIDO,
		PRIORIDAD,
		LUGARENTREGA,
		CVE_PRENDA,
		CVE_MATERIAL,
		FECHAASIGNACION,
		LOTES
	FROM
		#EMXOP
	WHERE
		TIPOMATERIAL = 'T'
	GROUP BY
		NO_PEDIDO,
		PRIORIDAD,
		LUGARENTREGA,
		CVE_PRENDA,
		CVE_MATERIAL,
		FECHAASIGNACION,
		LOTES
	ORDER BY
		CVE_PRENDA,
		LUGARENTREGA,
		CVE_MATERIAL
	OPEN PARTIDASTELAS
	FETCH NEXT FROM PARTIDASTELAS INTO @NO_PEDIDO,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA,@CVE_MATERIAL,@FECHAASIGNACION,@LOTES
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF (@PRIORIDADANT = @PRIORIDAD) AND (@LUGARENTREGAANT = @LUGARENTREGA) AND (@CVE_PRENDAANT = @CVE_PRENDA)
		BEGIN
			--SELECT 'ENTRA A ADICIONAR',@PRIORIDADANT,@LUGARENTREGAANT,@CVE_PRENDAANT,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA
			SET @QUERY_FROM += ',#EMXOP EMLE' + '' + CONVERT(NVARCHAR,@CONSECUTIVO) + '' + ' '
			SET @QUERY_WHERE += ' AND EMLE.NO_PEDIDO = EMLE' + '' + CONVERT(NVARCHAR,@CONSECUTIVO) + '' +'.NO_PEDIDO AND EMLE.LUGARENTREGA = EMLE' + '' + CONVERT(NVARCHAR,@CONSECUTIVO) + ''+ '.LUGARENTREGA AND EMLE.CVE_PRENDA = EMLE'+ '' + CONVERT(NVARCHAR,@CONSECUTIVO) + '' + '.CVE_PRENDA AND EMLE' + '' + CONVERT(NVARCHAR,@CONSECUTIVO) + '' + '.TIPOMATERIAL = ' + '''' + 'T' + '''' + ' AND EMLE' + '' + CONVERT(NVARCHAR,@CONSECUTIVO) + '.CVE_MATERIAL = ' + '''' + @CVE_MATERIAL + '''' + ' AND EMLE' + CONVERT(NVARCHAR,@CONSECUTIVO) + '.FECHAASIGNACION = ' + '''' + CONVERT(NVARCHAR,@FECHAASIGNACION) + '''' + ' AND EMLE' + CONVERT(NVARCHAR,@CONSECUTIVO) + '.LOTES = ' + '' + CONVERT(NVARCHAR,@LOTES) + '' + ''
			SET @PRIORIDADANT = @PRIORIDAD
			SET @LUGARENTREGAANT = @LUGARENTREGA
			SET @CVE_PRENDAANT = @CVE_PRENDA
			SET @CONSECUTIVO += 1
		END
		ELSE
		BEGIN
			--SELECT 'ENTRA A NUEVO',@PRIORIDADANT,@LUGARENTREGAANT,@CVE_PRENDAANT,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA
			IF @QUERY_FROM <> '' AND @QUERY_WHERE <> ''
			BEGIN--GUARDA EL REGISTRO PREVIO
				--SELECT 'ENTRA A GUARDAR',@PRIORIDADANT,@LUGARENTREGAANT,@CVE_PRENDAANT,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA
				INSERT INTO #AUXQUERY_PRIORIDAD
				(
					NO_PEDIDO,
					PRIORIDAD,
					LUGARENTREGA,
					CVE_PRENDA,
					QUERY
				)
				VALUES
				(
					@NO_PEDIDO,
					@PRIORIDADANT,
					@LUGARENTREGAANT,
					@CVE_PRENDAANT,
					'EMLE.NO_PEDIDO,EMLE.PRIORIDAD,EMLE.LUGARENTREGA,EMLE.CVE_PRENDA,EMLE.DESCRIPCIONPRENDA,EMLE.CANTIDAD FROM ' + @QUERY_FROM + @QUERY_WHERE
				)
			END
			--'SELECT EMLE.NO_PEDIDO,EMLE.PRIORIDAD,EMLE.LUGARENTREGA,EMLE.CVE_PRENDA,EMLE.DESCRIPCIONPRENDA,EMLE.CANTIDAD FROM'
			SET @QUERY_FROM = '#EMXOP EMLE '
			SET @QUERY_WHERE = ' WHERE EMLE.TIPOMATERIAL = ' + '''' + 'T'+ '''' + ' AND EMLE.CVE_PRENDA = ' + CONVERT(NVARCHAR,@CVE_PRENDA) + ' AND EMLE.CVE_MATERIAL = ' + '''' + @CVE_MATERIAL + '''' + ' AND EMLE.FECHAASIGNACION = ' + '''' + CONVERT(NVARCHAR,@FECHAASIGNACION) + '''' + ' AND EMLE.LOTES = ' + CONVERT(NVARCHAR,@LOTES) 
			SET @PRIORIDADANT = @PRIORIDAD
			SET @LUGARENTREGAANT = @LUGARENTREGA
			SET @CVE_PRENDAANT = @CVE_PRENDA
			SET @CONSECUTIVO = 1
		END

		FETCH NEXT FROM PARTIDASTELAS INTO @NO_PEDIDO,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA,@CVE_MATERIAL,@FECHAASIGNACION,@LOTES
	END
		--INSERTA ULTIMO REGISTRO
		INSERT INTO #AUXQUERY_PRIORIDAD
		(
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			CVE_PRENDA,
			QUERY
		)
		VALUES
		(
			@NO_PEDIDO,
			@PRIORIDADANT,
			@LUGARENTREGAANT,
			@CVE_PRENDAANT,
			'EMLE.NO_PEDIDO,EMLE.PRIORIDAD,EMLE.LUGARENTREGA,EMLE.CVE_PRENDA,EMLE.DESCRIPCIONPRENDA,EMLE.CANTIDAD FROM ' + @QUERY_FROM + @QUERY_WHERE
		)
	CLOSE PARTIDASTELAS
	DEALLOCATE PARTIDASTELAS

	--CREA TABLA DONDE SE GUARDARAN LAS FILAS DE CADA OP
	CREATE TABLE #NO_OP_ASIGNACION_PRIORIDAD
	(
		NO_OP BIGINT,
		NO_PEDIDO NUMERIC(18,0),
		PRIORIDAD BIGINT,
		LUGARENTREGA BIGINT,
		CVE_PRENDA NUMERIC(18,0),
		DESCRIPCIONPRENDA NVARCHAR(255),
		CANTIDAD NUMERIC(18,0),
		FECHAASIGNACION DATE,
		LOTES INT
	)

	CREATE TABLE #AUX --SE GUARDAN LOS VALORES OBTENIDOS DE LA CONSULTA PARA VALIDAR QUE NO SE HAYAN ASIGNADO ANTES
	(
		NO_PEDIDO NUMERIC(18,0),
		PRIORIDAD BIGINT,
		LUGARENTREGA BIGINT,
		CVE_PRENDA NUMERIC(18,0),
		DESCRIPCIONPRENDA NVARCHAR(255),
		CANTIDAD NUMERIC(18,0)
	)
	
	CREATE TABLE #AUXGLOBAL --SE GUARDAN LOS VALORES OBTENIDOS DE LA CONSULTA PARA VALIDAR QUE NO SE HAYAN ASIGNADO ANTES
	(
		NO_PEDIDO NUMERIC(18,0),
		PRIORIDAD BIGINT,
		LUGARENTREGA BIGINT,
		CVE_PRENDA NUMERIC(18,0),
		DESCRIPCIONPRENDA NVARCHAR(255),
		CANTIDAD NUMERIC(18,0)
	)

	--SE INICIALIZA EL CONSECUTIVO DE OP CON EL ÚLTIMO @NO_OP
	SELECT @NO_OP = ISNULL(MAX(NO_OP),0) FROM OP_ASIGNACION
	SET @NO_OP +=1

	--CURSOR PARA EJECUTAR LOS QUERYS Y OBTENER LAS OP QUE SE PUEDEN JUNTAR
	DECLARE PARTIDAS CURSOR FOR
	SELECT
		NO_PEDIDO,
		PRIORIDAD,
		LUGARENTREGA,
		CVE_PRENDA,
		QUERY
	FROM
		#AUXQUERY_PRIORIDAD
	OPEN PARTIDAS
	FETCH NEXT FROM PARTIDAS INTO @NO_PEDIDO,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA,@QUERY
	WHILE @@FETCH_STATUS = 0
	BEGIN
		--EJECUTA EL QUERY Y GUARDA EL RESULTADO EN LA TABLA #AUX
		INSERT INTO #AUX
		(
			NO_PEDIDO,
			PRIORIDAD,
			LUGARENTREGA,
			CVE_PRENDA,
			DESCRIPCIONPRENDA,
			CANTIDAD
		)
		EXECUTE('SELECT '+@QUERY)

		--SE CHECA QUE NO EXISTAN LOS REGISTROS EN LA TABLA #NO_OP_ASIGNACION
		IF NOT EXISTS(SELECT * FROM #AUXGLOBAL AG WHERE EXISTS(SELECT NULL FROM #AUX A WHERE A.NO_PEDIDO = AG.NO_PEDIDO AND A.PRIORIDAD = AG.PRIORIDAD AND A.LUGARENTREGA = AG.LUGARENTREGA AND A.CVE_PRENDA = AG.CVE_PRENDA ))
		BEGIN
			--QUIERE DECIR QUE NO EXISTEN, POR LO TANTO SE GUARDAN LOS REGISTROS CON EL CONSECUTIVO ASIGNADO
			--SE INSERTA EN LA TABLA AUXGLOBAL PARA QUE SE PUEDAN COMPARAR LOS REGISTROS MÁS ADELANTE
			INSERT INTO #AUXGLOBAL
			(
				NO_PEDIDO,
				PRIORIDAD,
				LUGARENTREGA,
				CVE_PRENDA,
				DESCRIPCIONPRENDA,
				CANTIDAD
			)
			EXECUTE('SELECT '+@QUERY)

			INSERT INTO #NO_OP_ASIGNACION_PRIORIDAD
			(
				NO_OP,
				NO_PEDIDO,
				PRIORIDAD,
				LUGARENTREGA,
				CVE_PRENDA,
				DESCRIPCIONPRENDA,
				CANTIDAD
			)
			EXECUTE('SELECT ' + @NO_OP + ',' + @QUERY)

			--SE INCREMENTA EL NO_OP
			SET @NO_OP += 1
		END
		DELETE #AUX
		FETCH NEXT FROM PARTIDAS INTO @NO_PEDIDO,@PRIORIDAD,@LUGARENTREGA,@CVE_PRENDA,@QUERY
	END
	CLOSE PARTIDAS
	DEALLOCATE PARTIDAS

	UPDATE
		#NO_OP_ASIGNACION_PRIORIDAD
	SET
		FECHAASIGNACION = (SELECT MAX(EMLE.FECHAASIGNACION) FROM #EMXOP EMLE WHERE #NO_OP_ASIGNACION_PRIORIDAD.NO_PEDIDO = EMLE.NO_PEDIDO AND #NO_OP_ASIGNACION_PRIORIDAD.PRIORIDAD = EMLE.PRIORIDAD AND #NO_OP_ASIGNACION_PRIORIDAD.LUGARENTREGA = EMLE.LUGARENTREGA AND #NO_OP_ASIGNACION_PRIORIDAD.CVE_PRENDA = EMLE.CVE_PRENDA AND #NO_OP_ASIGNACION_PRIORIDAD.DESCRIPCIONPRENDA = EMLE.DESCRIPCIONPRENDA),
		LOTES = (SELECT MAX(EMLE.LOTES) FROM #EMXOP EMLE WHERE #NO_OP_ASIGNACION_PRIORIDAD.NO_PEDIDO = EMLE.NO_PEDIDO AND #NO_OP_ASIGNACION_PRIORIDAD.PRIORIDAD = EMLE.PRIORIDAD AND #NO_OP_ASIGNACION_PRIORIDAD.LUGARENTREGA = EMLE.LUGARENTREGA AND #NO_OP_ASIGNACION_PRIORIDAD.CVE_PRENDA = EMLE.CVE_PRENDA AND #NO_OP_ASIGNACION_PRIORIDAD.DESCRIPCIONPRENDA = EMLE.DESCRIPCIONPRENDA AND EMLE.TIPOMATERIAL = 'T')
		
	CREATE TABLE #OP_FINAL_PRIORIDAD
	(
		NO_OP BIGINT,
		NO_PEDIDO BIGINT,
		CVE_PRENDA BIGINT,
		DESCRIPCIONPRENDA NVARCHAR(255),
		CANTIDAD NUMERIC(18,0),
		FECHAASIGNACION DATE,
		LOTES INT
	)

	INSERT INTO #OP_FINAL_PRIORIDAD
	(
		NO_OP,
		NO_PEDIDO,
		CVE_PRENDA,
		DESCRIPCIONPRENDA,
		CANTIDAD
	)
	SELECT 
		NO_OP,
		NO_PEDIDO,
		CVE_PRENDA,
		DESCRIPCIONPRENDA ,
		SUM(CANTIDAD)
	FROM 
		#NO_OP_ASIGNACION_PRIORIDAD
	GROUP BY
		NO_OP,
		NO_PEDIDO,
		CVE_PRENDA,
		DESCRIPCIONPRENDA 

	UPDATE
		#OP_FINAL_PRIORIDAD
	SET
		FECHAASIGNACION = (SELECT MAX(EMLE.FECHAASIGNACION) FROM #NO_OP_ASIGNACION_PRIORIDAD EMLE WHERE #OP_FINAL_PRIORIDAD.NO_PEDIDO = EMLE.NO_PEDIDO AND #OP_FINAL_PRIORIDAD.NO_OP = EMLE.NO_OP),
		LOTES = (SELECT MAX(EMLE.LOTES) FROM #NO_OP_ASIGNACION_PRIORIDAD EMLE WHERE #OP_FINAL_PRIORIDAD.NO_PEDIDO = EMLE.NO_PEDIDO AND #OP_FINAL_PRIORIDAD.NO_OP = EMLE.NO_OP)

	CREATE TABLE #OP_FINAL_PRIORIDAD_AGRUPACION
	(
		NO_OP BIGINT IDENTITY(1,1) NOT NULL,
		NO_PEDIDO BIGINT,
		CVE_PRENDA BIGINT,
		DESCRIPCIONPRENDA NVARCHAR(255),
		CANTIDAD NUMERIC(18,0),
		FECHAASIGNACION DATE,
		LOTES INT
	)

	CREATE TABLE #NO_OP_AGRUPADOS
	(
		NO_OP_ORIGINAL BIGINT,
		NO_OP_ACTUAL BIGINT
	)

	IF @SUBTIPO = 1 --AGRUPA LAS OP Y REENUMERA DE ACUERDO A LA CONDICION POR CVE_PRENDA
	BEGIN
		DECLARE @TIPOAGRUPACION NVARCHAR(50)
		--SE INICIALIZA EL CONSECUTIVO DE OP
		SELECT @NO_OP = ISNULL(MAX(No_OP),0) FROM OP_ASIGNACION
		SET @NO_OP += 1

		DBCC CHECKIDENT (#OP_FINAL_PRIORIDAD_AGRUPACION, RESEED, @NO_OP)

		DECLARE ListaDescripciones CURSOR FOR
		SELECT
			Cve_Prenda,
			TipoAgrupacion
		FROM
			@Agrupacion
		ORDER BY
			Cve_Prenda
		OPEN ListaDescripciones
		FETCH NEXT FROM ListaDescripciones INTO @CVE_PRENDA,@TIPOAGRUPACION
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF @TIPOAGRUPACION = 'ORIGINAL'
			BEGIN
				INSERT INTO #OP_FINAL_PRIORIDAD_AGRUPACION
				(
					NO_PEDIDO,
					CVE_PRENDA,
					DESCRIPCIONPRENDA,
					CANTIDAD,
					FECHAASIGNACION,
					LOTES
				)
				SELECT
					OPFLE.NO_PEDIDO,
					OPFLE.CVE_PRENDA,
					OPFLE.DESCRIPCIONPRENDA,
					OPFLE.CANTIDAD,
					OPFLE.FECHAASIGNACION,
					OPFLE.LOTES
				FROM 
					#OP_FINAL_PRIORIDAD OPFLE
				WHERE
					OPFLE.CVE_PRENDA = @CVE_PRENDA

				INSERT INTO #NO_OP_AGRUPADOS
				(
					NO_OP_ORIGINAL,
					NO_OP_ACTUAL
				)
				SELECT
					OPFLE.NO_OP,
					OPFLEA.NO_OP
				FROM 
					#OP_FINAL_PRIORIDAD OPFLE,
					#OP_FINAL_PRIORIDAD_AGRUPACION OPFLEA
				WHERE
					OPFLE.CVE_PRENDA = @CVE_PRENDA
				AND	OPFLE.NO_PEDIDO = OPFLEA.NO_PEDIDO
				AND	OPFLE.CVE_PRENDA= OPFLEA.CVE_PRENDA
				AND	OPFLE.DESCRIPCIONPRENDA = OPFLEA.DESCRIPCIONPRENDA
				AND	OPFLE.CANTIDAD = OPFLEA.CANTIDAD
				AND	OPFLE.FECHAASIGNACION = OPFLEA.FECHAASIGNACION
				AND	OPFLE.LOTES = OPFLEA.LOTES
			END
			IF @TIPOAGRUPACION = 'CVE_PRENDA'
			BEGIN
				INSERT INTO #OP_FINAL_PRIORIDAD_AGRUPACION
				(
					NO_PEDIDO,
					CVE_PRENDA,
					DESCRIPCIONPRENDA,
					CANTIDAD,
					FECHAASIGNACION,
					LOTES
				)
				SELECT
					OPFLE.NO_PEDIDO,
					OPFLE.CVE_PRENDA,
					OPFLE.DESCRIPCIONPRENDA,
					SUM(OPFLE.CANTIDAD),
					(SELECT MAX(OPFLE1.FECHAASIGNACION) FROM #OP_FINAL_PRIORIDAD OPFLE1 WHERE OPFLE1.NO_PEDIDO = OPFLE.NO_PEDIDO AND OPFLE1.CVE_PRENDA = OPFLE.CVE_PRENDA),
					(SELECT MAX(OPFLE1.LOTES) FROM #OP_FINAL_PRIORIDAD OPFLE1 WHERE OPFLE1.NO_PEDIDO = OPFLE.NO_PEDIDO AND OPFLE1.CVE_PRENDA = OPFLE.CVE_PRENDA)
				FROM 
					#OP_FINAL_PRIORIDAD OPFLE
				WHERE
					OPFLE.CVE_PRENDA = @CVE_PRENDA
				GROUP BY
					OPFLE.NO_PEDIDO,
					OPFLE.CVE_PRENDA,
					OPFLE.DESCRIPCIONPRENDA

				INSERT INTO #NO_OP_AGRUPADOS
				(
					NO_OP_ORIGINAL,
					NO_OP_ACTUAL
				)
				SELECT
					OPFLE.NO_OP,
					OPFLEA.NO_OP
				FROM 
					#OP_FINAL_PRIORIDAD OPFLE,
					#OP_FINAL_PRIORIDAD_AGRUPACION OPFLEA
				WHERE
					OPFLE.CVE_PRENDA = @CVE_PRENDA
				AND	OPFLE.NO_PEDIDO = OPFLEA.NO_PEDIDO
				AND	OPFLE.CVE_PRENDA= OPFLEA.CVE_PRENDA
				AND	OPFLE.DESCRIPCIONPRENDA = OPFLEA.DESCRIPCIONPRENDA

			END
			IF @TIPOAGRUPACION = 'FECHA'
			BEGIN
				INSERT INTO #OP_FINAL_PRIORIDAD_AGRUPACION
				(
					NO_PEDIDO,
					CVE_PRENDA,
					DESCRIPCIONPRENDA,
					CANTIDAD,
					FECHAASIGNACION,
					LOTES
				)
				SELECT
					OPFLE.NO_PEDIDO,
					OPFLE.CVE_PRENDA,
					OPFLE.DESCRIPCIONPRENDA,
					SUM(OPFLE.CANTIDAD),
					OPFLE.FECHAASIGNACION,
					(SELECT MAX(OPFLE1.LOTES) FROM #OP_FINAL_PRIORIDAD OPFLE1 WHERE OPFLE1.NO_PEDIDO = OPFLE.NO_PEDIDO AND OPFLE1.CVE_PRENDA = OPFLE.CVE_PRENDA)
				FROM 
					#OP_FINAL_PRIORIDAD OPFLE
				WHERE
					OPFLE.CVE_PRENDA = @CVE_PRENDA
				GROUP BY
					OPFLE.NO_PEDIDO,
					OPFLE.CVE_PRENDA,
					OPFLE.DESCRIPCIONPRENDA,
					OPFLE.FECHAASIGNACION
				
				INSERT INTO #NO_OP_AGRUPADOS
				(
					NO_OP_ORIGINAL,
					NO_OP_ACTUAL
				)
				SELECT
					OPFLE.NO_OP,
					OPFLEA.NO_OP
				FROM 
					#OP_FINAL_PRIORIDAD OPFLE,
					#OP_FINAL_PRIORIDAD_AGRUPACION OPFLEA
				WHERE
					OPFLE.CVE_PRENDA = @CVE_PRENDA
				AND	OPFLE.NO_PEDIDO = OPFLEA.NO_PEDIDO
				AND	OPFLE.CVE_PRENDA= OPFLEA.CVE_PRENDA
				AND	OPFLE.DESCRIPCIONPRENDA = OPFLEA.DESCRIPCIONPRENDA
				AND OPFLE.FECHAASIGNACION = OPFLEA.FECHAASIGNACION
			END
				
			FETCH NEXT FROM ListaDescripciones INTO @CVE_PRENDA,@TIPOAGRUPACION
		END
		CLOSE ListaDescripciones
		DEALLOCATE ListaDescripciones

		--ACTUALIZA NUEVOS NÚMEROS DE OP
		DECLARE ListaOP CURSOR FOR
		SELECT
			NO_OP_ACTUAL
		FROM
			#NO_OP_AGRUPADOS
		GROUP BY
			NO_OP_ACTUAL
		ORDER BY
			NO_OP_ACTUAL
		OPEN ListaOP
		FETCH NEXT FROM ListaOP INTO @NO_OP
		WHILE @@FETCH_STATUS = 0
		BEGIN
			UPDATE
				#NO_OP_ASIGNACION_PRIORIDAD
			SET
				NO_OP = @NO_OP
			FROM
				#NO_OP_ASIGNACION_PRIORIDAD NOPA,
				#NO_OP_AGRUPADOS NOPAG
			WHERE
				NOPAG.NO_OP_ACTUAL = @NO_OP
			AND NOPA.NO_OP = NOPAG.NO_OP_ORIGINAL

			UPDATE
				#OP_FINAL_PRIORIDAD
			SET
				NO_OP = @NO_OP
			FROM
				#OP_FINAL_PRIORIDAD OPFLE,
				#NO_OP_AGRUPADOS NOPAG
			WHERE
				NOPAG.NO_OP_ACTUAL = @NO_OP
			AND OPFLE.NO_OP = NOPAG.NO_OP_ORIGINAL
		
			FETCH NEXT FROM ListaOP INTO @NO_OP
		END
		CLOSE ListaOP
		DEALLOCATE ListaOP
	
	END

	--SELECT * FROM #ITERACIONESOC WHERE NO_PARCIALIDAD IS NULL
	-----***************************************TERMINA PROCESO POR PRIORIDAD


	--ACTUALIZA EL NÚMERO DE OP EN LA TABLA DE PEDIDO_INTERNO_TALLAS
	UPDATE
		PEDIDO_INTERNO_TALLAS
	SET
		No_OP = OP.NO_OP
	FROM
		PEDIDO_INTERNO_TALLAS PIT,
		#NO_OP_ASIGNACION_PRIORIDAD OP
	WHERE
		PIT.Empresa = @EMPRESA
	AND PIT.No_Pedido = OP.NO_PEDIDO
	AND PIT.Prioridad = OP.PRIORIDAD
	AND PIT.LugarDeEntrega = OP.LUGARENTREGA
	AND PIT.Cve_Prenda = OP.CVE_PRENDA

	--GUARDA ITERACIONES DE OC
	INSERT INTO ORDEN_COMPRA_ASIGNACION_ITERACIONES
    (
		[Empresa]
		,[No_Pedido]
		,[Prioridad]
        ,[LugarEntrega]
        ,[NombreLugarEntrega]
		,[Cve_Prenda]
		,[DescripcionPrenda]
        ,[TipoMaterial]
        ,[Cve_Material]
        ,[DescripcionMaterial]
        ,[Consumo]
        ,[No_Parcialidad]
        ,[No_OrdenCompra]
        ,[Partida]
        ,[CantidadPromesa]
        ,[FechaPromesa]
        ,[AsignacionPromesa]
        ,[SaldoConsumo]
        ,[SobrantePromesa]
		,[PSPE]
		,[OLE]
		,[USUARIO]
		,[FECHAHORA]
		,[COMPUTADORA]
	)
	SELECT 
		IOC.EMPRESA,
		IOC.NO_PEDIDO,
		IOC.PRIORIDAD,
		IOC.LUGARENTREGA,
		IOC.NOMBRELUGARENTREGA,
		IOC.CVE_PRENDA,
		IOC.DESCRIPCIONPRENDA,
		IOC.TIPOMATERIAL,
		IOC.CVE_MATERIAL,
		IOC.DESCRIPCIONMATERIAL,
		IOC.CONSUMO,
		IOC.NO_PARCIALIDAD,
		IOC.NO_ORDENCOMPRA,
		IOC.PARTIDA,
		IOC.CANTIDADPROMESA,
		IOC.FECHAPROMESA,
		IOC.ASIGNACIONPROMESA,
		IOC.SALDOCONSUMO,
		IOC.SOBRANTEPROMESA,
		1,
		0,
		@USUARIO,
		GETDATE(),
		@COMPUTADORA
	FROM 
		#ITERACIONESOC IOC

	--INSERTA LOS CONSECUTIVOS DE OP EN LA TABLA OP_ASIGNACIÓN
	IF @SUBTIPO = 0
	BEGIN
		INSERT INTO OP_ASIGNACION
		(
			[Empresa]
			,[No_OP]
			,[Asignada]
			,[FechaParaAsignar]
			,[Estatus]
			,[EnProceso]
			,[Finalizada]
			,[Cancelada]
		)
		SELECT
			@EMPRESA,
			OP.NO_OP,
			0,
			OP.FECHAASIGNACION,
			'PENDIENTE',
			0,
			0,
			0
		FROM
			#OP_FINAL_PRIORIDAD OP
	END
	ELSE
	BEGIN
		IF @SUBTIPO = 1
		BEGIN
			INSERT INTO OP_ASIGNACION
			(
				[Empresa]
				,[No_OP]
				,[Asignada]
				,[FechaParaAsignar]
				,[Estatus]
				,[EnProceso]
				,[Finalizada]
				,[Cancelada]
			)
			SELECT
				@EMPRESA,
				OP.NO_OP,
				0,
				OP.FECHAASIGNACION,
				'PENDIENTE',
				0,
				0,
				0
			FROM
				#OP_FINAL_PRIORIDAD_AGRUPACION OP
		END
	END

	--INSERTA LOS REGISTROS DE EXPLOSIÓN DE MATERIALES POR OP
	INSERT INTO [dbo].[OP_EXPLOSION_MATERIALES]
           ([Empresa]
           ,[No_OP]
           ,[No_Pedido]
           ,[Cve_Prenda]
           ,[DescripcionPrenda]
           ,[TipoMaterial]
           ,[Cve_Material]
           ,[Cve_Tela]
           ,[Cve_Grupo]
           ,[Cve_Habilitacion]
           ,[DescripcionMaterial]
           ,[Cantidad]
           ,[RecibidoCompletoPorMaquilador]
		   ,[InspeccionadoCompletoPorInspector]
		   ,[NoSeRequirio]
           ,[FECHAHORA]
	)
	SELECT
		@EMPRESA,
		PIT.No_OP,
		PIT.No_Pedido,
		PIT.Cve_Prenda,
		PIT.DescripcionPrenda,
		PEMD.TipoMaterial,
		CASE WHEN PEMD.TipoMaterial = 'T' THEN CONVERT(NVARCHAR(15),PEMD.Cve_Tela) ELSE PEMD.Cve_Grupo + RIGHT('000000'+ CAST(PEMD.Cve_Habilitacion AS VARCHAR),6) END,
		CASE WHEN PEMD.TipoMaterial = 'T' THEN PEMD.Cve_Tela ELSE NULL END,
		CASE WHEN PEMD.TipoMaterial = 'H' THEN PEMD.Cve_Grupo ELSE NULL END,
		CASE WHEN PEMD.TipoMaterial = 'H' THEN PEMD.Cve_Habilitacion ELSE NULL END,
		PEMD.Descripcion,
		CASE WHEN TipoMaterial = 'T' THEN SUM((PIT.CANTIDAD*PEMD.Consumo)/CT.ANCHO) ELSE SUM(PIT.CANTIDAD*PEMD.Consumo) END,
		0,
		0,
		0,
		GETDATE()
	FROM
		PRENDA_ESTRUCTURA_MATERIALES PEM,
		PEDIDO_INTERNO_TALLAS PIT,
		PRENDA_ESTRUCTURA_MATERIALES_DETALLE PEMD
		LEFT JOIN
			CATALOGO_TELA CT
		ON
			CT.Cve_Tela = PEMD.Cve_Tela
	WHERE
		PIT.Empresa = @EMPRESA
	AND PIT.No_Pedido = @NO_PEDIDO
	AND	PEMD.Cve_Prenda = PIT.Cve_Prenda
	AND PEM.Cve_Prenda = PEMD.Cve_Prenda
	AND PEM.Partida = PEMD.Partida
	AND PIT.Talla = PEM.Talla
	GROUP BY
		PIT.NO_OP,
		PIT.No_Pedido,
		PIT.Cve_Prenda,
		PIT.DescripcionPrenda,
		PEMD.TipoMaterial,
		PEMD.Cve_Tela,
		PEMD.Cve_Grupo,
		PEMD.Cve_Habilitacion,
		PEMD.Descripcion
	
	--ACTUALIZA EL SOBRANTE DE LA ORDEN DE COMPRA
	UPDATE
		ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA_SALDO
	SET
		CantidadPromesa = OCP.CANTIDADPROMESA
	FROM
		ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA_SALDO OCFPS,
		#OCPARCIALIDADES OCP
	WHERE
		OCFPS.Empresa = @EMPRESA
	AND OCFPS.No_Pedido = OCP.NO_PEDIDO
	AND OCFPS.No_OrdenCompra = OCP.NO_ORDENCOMPRA
	AND OCFPS.Partida = OCP.PARTIDA
	AND OCFPS.TipoMaterial = OCP.TIPOMATERIAL
	AND OCFPS.Cve_Material = OCP.CVE_MATERIAL
	AND OCFPS.No_Parcialidad = OCP.NO_PARCIALIDAD
	AND OCFPS.No_OP = 0

	--GUARDA LA MATRIZ DE AGRUPACIÓN SI ES QUE SE HIZO POR ESE MÉTODO
	IF @SUBTIPO = 1
	BEGIN
		INSERT INTO OP_ASIGNACION_AGRUPACION
        (
			[Empresa]
           ,[No_Pedido]
           ,[Cve_Prenda]
           ,[TipoAgrupacion]
		)
		SELECT
			@EMPRESA,
			@NO_PEDIDO,
			A.Cve_Prenda,
			A.TipoAgrupacion
		FROM
			@Agrupacion A
	END

	--GENERA E INSERTA LOS REGISTROS EN LA TABLA DE MEDIDA TOMA DE MEDIDA DESPÚES DE PROCESO
	;WITH cte AS
	(
		SELECT 
			1 as num,
			PIT.No_OP,
			PIT.Talla,
			PTM.PARTIDA,
			(SELECT ISNULL(CEILING((SUM(PIT.Cantidad)/(SELECT SUM(PIT1.CANTIDAD) FROM PEDIDO_INTERNO_TALLAS PIT1 WHERE PIT1.Empresa = PIT.Empresa AND PIT1.No_OP = PIT.No_OP))*LAC.TamañoDeLaMuestra),0) FROM LIMITE_ACEPTABLE_CALIDAD LAC WHERE LAC.LimiteInferior <= (SELECT SUM(PIT1.CANTIDAD) FROM PEDIDO_INTERNO_TALLAS PIT1 WHERE PIT1.Empresa = PIT.Empresa AND PIT1.No_OP = PIT.No_OP) AND LAC.LimiteSuperior >= (SELECT SUM(PIT1.CANTIDAD) FROM PEDIDO_INTERNO_TALLAS PIT1 WHERE PIT1.Empresa = PIT.Empresa AND PIT1.No_OP = PIT.No_OP)) AS CANTIDAD
		FROM 
			PEDIDO_INTERNO_TALLAS PIT,
			PRENDA_TABLA_MEDIDA PTM
		WHERE
			PIT.Empresa = @EMPRESA
		AND PIT.No_Pedido = @NO_PEDIDO
		AND PIT.Cve_Prenda = PTM.Cve_Prenda
		GROUP BY
			PIT.Empresa,
			PIT.No_OP,
			PTM.Partida,
			PIT.Talla
		UNION all 
		SELECT num+1,  No_OP , Talla, Partida, CANTIDAD
		FROM cte c 
		WHERE c.num < cantidad
	) 
	INSERT INTO OP_TABLA_MEDIDA_TOMA_MEDIDA
	(
		 [Empresa]
		,[OP]
		,[Talla]
		,[Partida]
		,[NoMedida]
		,[Terminado]
		,[USUARIO]
		,[FECHAHORA]
		,[COMPUTADORA]
	)
	SELECT
		@EMPRESA,--EMPRESA
		No_OP,
		Talla,
		Partida,
		num,
		0,--TERMINADO
		@USUARIO,
		GETDATE(),
		@COMPUTADORA
	FROM
		cte
	WHERE
		1=1
	ORDER BY 
		No_OP,Talla,num,Partida
	OPTION (maxrecursion 365)
	;

	--GENERA E INSERTA LOS REGISTROS NECESARIOS PARA LA TABLA OP_TABLA_MEDIDAAP_TOMA_MEDIDA
	;WITH cte AS
	(
		SELECT 
			1 as num,
			PIT.No_OP,
			PIT.Talla,
			PTM.PARTIDA,
			(SELECT ISNULL(CEILING((SUM(PIT.Cantidad)/(SELECT SUM(PIT1.CANTIDAD) FROM PEDIDO_INTERNO_TALLAS PIT1 WHERE PIT1.Empresa = PIT.Empresa AND PIT1.No_OP = PIT.No_OP))*LAC.TamañoDeLaMuestra),0) FROM LIMITE_ACEPTABLE_CALIDAD LAC WHERE LAC.LimiteInferior <= (SELECT SUM(PIT1.CANTIDAD) FROM PEDIDO_INTERNO_TALLAS PIT1 WHERE PIT1.Empresa = PIT.Empresa AND PIT1.No_OP = PIT.No_OP) AND LAC.LimiteSuperior >= (SELECT SUM(PIT1.CANTIDAD) FROM PEDIDO_INTERNO_TALLAS PIT1 WHERE PIT1.Empresa = PIT.Empresa AND PIT1.No_OP = PIT.No_OP)) AS CANTIDAD
		FROM 
			PEDIDO_INTERNO_TALLAS PIT,
			PRENDA_TABLA_MEDIDA PTM
		WHERE
			PIT.Empresa = @EMPRESA
		AND PIT.No_Pedido = @NO_PEDIDO
		AND PIT.Cve_Prenda = PTM.Cve_Prenda
		GROUP BY
			PIT.Empresa,
			PIT.No_OP,
			PTM.Partida,
			PIT.Talla
		UNION all 
		SELECT num+1,  No_OP , Talla, Partida, CANTIDAD
		FROM cte c 
		WHERE c.num < cantidad
	) 
	INSERT INTO OP_TABLA_MEDIDAAP_TOMA_MEDIDA
	(
		 [Empresa]
		,[OP]
		,[Talla]
		,[Partida]
		,[NoMedida]
		,[Terminado]
		,[USUARIO]
		,[FECHAHORA]
		,[COMPUTADORA]
	)
	SELECT 
		@EMPRESA,--EMPRESA
		No_OP,
		Talla,
		Partida,
		num,
		0,--TERMINADO
		@USUARIO,
		GETDATE(),
		@COMPUTADORA
	FROM
		cte
	WHERE
		1=1
	ORDER BY 
		No_OP,Talla,num,Partida
	OPTION (maxrecursion 365)
	;

	--GENERA LOS REGISTROS E INSERTA EN LA TABLA OP_TM_MOLDE_TOMA_MEDIDA
	;WITH cte AS
	(
		SELECT
			1 as num,
			PIT.No_OP,
			PIT.Talla,
			PTMM.PARTIDA,
			1 AS CANTIDAD
		FROM 
			PEDIDO_INTERNO_TALLAS PIT,
			PRENDA_TM_MOLDE PTMM
		WHERE
			PIT.Empresa = @EMPRESA
		AND PIT.No_Pedido = @NO_PEDIDO
		AND PIT.Cve_Prenda = PTMM.Cve_Prenda
		GROUP BY
			PIT.Empresa,
			PIT.No_OP,
			PTMM.Partida,
			PIT.Talla
		UNION all 
		SELECT num+1,  No_OP , Talla, Partida, CANTIDAD
		FROM cte c 
		WHERE c.num < cantidad
	) 
	INSERT INTO OP_TM_MOLDE_TOMA_MEDIDA
	(
		 [Empresa]
		,[OP]
		,[Talla]
		,[Partida]
		,[NoMedida]
		,[Terminado]
		,[USUARIO]
		,[FECHAHORA]
		,[COMPUTADORA]
	)
	SELECT 
		@EMPRESA,--EMPRESA
		No_OP,
		Talla,
		Partida,
		num,
		0,--TERMINADO
		@USUARIO,
		GETDATE(),
		@COMPUTADORA
	FROM
		cte
	WHERE
		1=1
	ORDER BY 
		No_OP,Talla,num,Partida
	OPTION (maxrecursion 365)
	;

	--ACTUALIZAR SWITCH DE PEDIDO INTERNO
	UPDATE
		PEDIDO_INTERNO
	SET
		CalculoOP = 1,
		TipoAsignacion = 'PEPS'
	WHERE
		Empresa = @EMPRESA
	AND No_Pedido = @NO_PEDIDO

	DROP TABLE #INVENTARIOLUGARENTREGA
	DROP TABLE #OCPARCIALIDADES
	DROP TABLE #EMXOP
	DROP TABLE #ITERACIONESOC
	DROP TABLE #XPRIORIDAD
	DROP TABLE #XLUGARENTREGA
	DROP TABLE #XCVEPRENDA
	DROP TABLE #AUXQUERY_PRIORIDAD
	DROP TABLE #NO_OP_ASIGNACION_PRIORIDAD
	DROP TABLE #AUX
	DROP TABLE #AUXGLOBAL
	DROP TABLE #OP_FINAL_PRIORIDAD
	DROP TABLE #NO_OP_AGRUPADOS
	DROP TABLE #OP_FINAL_PRIORIDAD_AGRUPACION
END

--EXEC SP_PEDIDO_INTERNO_GUARDA_ASIGNACION_OP_PRIORIDAD 1,4,0,'ANALISISUNO'
GO


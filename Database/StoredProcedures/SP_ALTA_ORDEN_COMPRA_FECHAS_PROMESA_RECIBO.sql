USE [NORCELEC]
GO

/****** Object:  StoredProcedure [dbo].[SP_ALTA_ORDEN_COMPRA_FECHAS_PROMESA_RECIBO]    Script Date: 17/07/2025 06:00:11 p. m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_ALTA_ORDEN_COMPRA_FECHAS_PROMESA_RECIBO]
	-- Add the parameters for the stored procedure here
	@EMPRESA BIGINT,
	@NO_ORDENCOMPRA BIGINT,
	@PARTIDA BIGINT,
	@NOPARCIALIDAD BIGINT,
	@RECIBOCOMPLETO BIT,
	@FECHARECIBO DATE,
	@CANTIDADRECIBIDA NUMERIC(18,2) = NULL,
	@FACTURARECIBO NVARCHAR(50),
	@USUARIO BIGINT,
	@COMPUTADORA NVARCHAR(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	DECLARE @NO_ENTREGA BIGINT

	SELECT 
		@NO_ENTREGA = ISNULL(COUNT(*),0) 
	FROM 
		ORDEN_COMPRA_FECHA_PROMESA_RECIBO 
	WHERE 
		EMPRESA = @EMPRESA 
	AND No_OrdenCompra = @NO_ORDENCOMPRA 
	AND Partida = @PARTIDA 
	AND No_Parcialidad = @NOPARCIALIDAD

	SET @NO_ENTREGA += 1


	--GUARDA ENTRADA DE LA ORDEN DE COMPRA
	INSERT INTO ORDEN_COMPRA_FECHA_PROMESA_RECIBO
	(
		Empresa,
		No_OrdenCompra,
		Partida,
		No_Parcialidad,
		No_Entrega,
		CantidadRecibida,
		FechaRecibo,
		FacturaRecibo,
		CantidadDisponibleRemision,
		USUARIOINGRESO,
		FECHAHORAINGRESO,
		COMPUTADORAINGRESO
	)
	VALUES
	(
		@EMPRESA,
		@NO_ORDENCOMPRA,
		@PARTIDA,
		@NOPARCIALIDAD,
		@NO_ENTREGA,
		@CANTIDADRECIBIDA,
		@FECHARECIBO,
		@FACTURARECIBO,
		@CANTIDADRECIBIDA,
		@USUARIO,
		GETDATE(),
		@COMPUTADORA
	)
	

	--DECLARA VARIABLES PARA HACER EL CHEQUEO DE TOTAL DE MATERIAL INGRESADO
	DECLARE
		@TIPOMATERIAL NVARCHAR(1),
		@CVE_MATERIAL NVARCHAR(10),
		@CANTIDAD_OC NUMERIC(18,2),
		@CANTIDADTOTALRECIBIDAXPARCIALIDAD NUMERIC(18,2),
		@CANTIDADTOTALRECIBIDAXPARTIDA NUMERIC(18,2),
		@CANTIDADDISPONIBLE_OC NUMERIC(18,2),
		@CANTIDAD_OCXPARCIALIDAD NUMERIC(18,2),
		@NO_MOVIMIENTO BIGINT,
		@SALDOANTERIOR NUMERIC(18,2),
		@FACTOR NUMERIC(18,2)


	SELECT
		@TIPOMATERIAL = TipoMaterial,
		@CVE_MATERIAL = Cve_Material,
		@CANTIDAD_OC = Cantidad*Factor,
		@CANTIDADDISPONIBLE_OC = CantidadDisponible,
		@FACTOR = Factor
	FROM
		ORDEN_COMPRA
	WHERE
		Empresa = @EMPRESA
	AND No_OrdenCompra = @NO_ORDENCOMPRA
	AND Partida = @PARTIDA

	SELECT 
		@CANTIDAD_OCXPARCIALIDAD = CantidadPromesa
	FROM 
		ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA
	WHERE 
		EMPRESA = @EMPRESA 
	AND No_OrdenCompra = @NO_ORDENCOMPRA 
	AND Partida = @PARTIDA 
	AND No_Parcialidad = @NOPARCIALIDAD

	SELECT 
		@CANTIDADTOTALRECIBIDAXPARCIALIDAD = ISNULL(SUM(CantidadRecibida),0)
	FROM 
		ORDEN_COMPRA_FECHA_PROMESA_RECIBO 
	WHERE 
		EMPRESA = @EMPRESA 
	AND No_OrdenCompra = @NO_ORDENCOMPRA 
	AND Partida = @PARTIDA 
	AND No_Parcialidad = @NOPARCIALIDAD

	SELECT 
		@CANTIDADTOTALRECIBIDAXPARTIDA = ISNULL(SUM(CantidadRecibida*@FACTOR),0)
	FROM 
		ORDEN_COMPRA_FECHA_PROMESA_RECIBO 
	WHERE 
		EMPRESA = @EMPRESA 
	AND No_OrdenCompra = @NO_ORDENCOMPRA 
	AND Partida = @PARTIDA

	IF @TIPOMATERIAL = 'T'
	BEGIN
		SELECT
			@NO_MOVIMIENTO = ISNULL(MAX(TM.NoMovimiento),0)
		FROM 
			TELA_MOVIMIENTO TM
		WHERE
			TM.Cve_Tela = @CVE_MATERIAL

		SET @NO_MOVIMIENTO += 1

		SELECT
			@SALDOANTERIOR = T.Existencia + T.Reservado
		FROM
			CATALOGO_TELA T
		WHERE
			T.Cve_Tela = @CVE_MATERIAL

		INSERT INTO TELA_MOVIMIENTO
		(
			Cve_Tela,
			NoMovimiento,
			TipoMovimiento,
			FechaMovimiento,
			Origen,
			Origen_No,
			No_Documento,
			SaldoAnterior,
			CantidadMovimiento,
			SaldoFinal
		)
		VALUES
		(
			@CVE_MATERIAL,
			@NO_MOVIMIENTO,
			'E',
			GETDATE(),
			'OC',
			@NO_ORDENCOMPRA,
			@NOPARCIALIDAD,
			@SALDOANTERIOR,
			@CANTIDADRECIBIDA*@FACTOR,
			@SALDOANTERIOR+(@CANTIDADRECIBIDA*@FACTOR)
		)

		--SE ACTUALIZA EL INVENTARIO DE MATERIAL
			UPDATE
				CATALOGO_TELA
			SET 
				Reservado = Reservado + (@CANTIDADRECIBIDA*@FACTOR)
			WHERE
				Cve_Tela = @CVE_MATERIAL

		--SE CHECA QUE SE HAYA RECIBIO LA PARCIALIDAD COMPLETA, AQUI SE QUEDA SIN MULTIPLICAR POR EL FACTOR
		IF @CANTIDADTOTALRECIBIDAXPARCIALIDAD >= @CANTIDAD_OCXPARCIALIDAD
		BEGIN
			--SE FINALIZA LA PARCIALIDAD
			UPDATE
				ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA
			SET 
				Recibido = 1,
				Confirmado = 1
			WHERE
				Empresa = @EMPRESA
			AND No_OrdenCompra = @NO_ORDENCOMPRA
			AND Partida = @PARTIDA
			AND No_Parcialidad = @NOPARCIALIDAD

		END

		--PRIMERO SE VERIFICA QUE LA PARTIDA DE LA OC SE HAYA RECIBIDO POR COMPLETO, AQUI SI EN MULTIPLICADO POR EL FACTOR
		IF @CANTIDADTOTALRECIBIDAXPARTIDA >= @CANTIDAD_OC
		BEGIN
			--SI YA SE RECIBIÓ LA PARTIDA DE LA OC POR COMPLETO, SE FINALIZA LA PARTIDA
			UPDATE
				ORDEN_COMPRA
			SET 
				RECIBIDO = 1,
				CantidadDisponible = 0
			WHERE
				Empresa = @EMPRESA
			AND No_OrdenCompra = @NO_ORDENCOMPRA
			AND Partida = @PARTIDA

			--SE LIBERA A INVENTARIO LO QUE NO SE ASIGNÓ A NINGÚN PEDIDO O QUE SE HAYA RECIBIDO DE MÁS
			UPDATE
				CATALOGO_TELA
			SET
				Existencia = Existencia + (@CANTIDADTOTALRECIBIDAXPARTIDA-@CANTIDAD_OC+@CANTIDADDISPONIBLE_OC),
				Reservado = Reservado - (@CANTIDADTOTALRECIBIDAXPARTIDA-@CANTIDAD_OC+@CANTIDADDISPONIBLE_OC)
			WHERE
				Cve_Tela = @CVE_MATERIAL
		END
	END

	IF @TIPOMATERIAL = 'H'
	BEGIN
		SELECT
			@NO_MOVIMIENTO = ISNULL(MAX(HK.NoMovimiento),0)
		FROM 
			HABILITACION_KARDEX HK
		WHERE
			HK.Cve_Grupo = SUBSTRING(@CVE_MATERIAL,1,3)
		AND HK.Cve_Habilitacion = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))

		SET @NO_MOVIMIENTO += 1

		SELECT
			@SALDOANTERIOR = H.Existencia + H.Reservado
		FROM
			HABILITACION H
		WHERE
			H.Cve_Grupo = SUBSTRING(@CVE_MATERIAL,1,3)
		AND H.Cve_Habilitacion = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))

		INSERT INTO HABILITACION_KARDEX
		(
			Cve_Grupo,
			Cve_Habilitacion,
			NoMovimiento,
			TipoMovimiento,
			FechaMovimiento,
			Origen,
			Origen_No,
			No_Documento,
			SaldoAnterior,
			CantidadMovimiento,
			SaldoFinal
		)
		VALUES
		(
			SUBSTRING(@CVE_MATERIAL,1,3),
			CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6)),
			@NO_MOVIMIENTO,
			'E',
			GETDATE(),
			'OC',
			@NO_ORDENCOMPRA,
			@NOPARCIALIDAD,
			@SALDOANTERIOR,
			@CANTIDADRECIBIDA*@FACTOR,
			@SALDOANTERIOR+(@CANTIDADRECIBIDA*@FACTOR)
		)

		--SE ACTUALIZA EL INVENTARIO DE MATERIAL
		UPDATE
			HABILITACION
		SET 
			Reservado = Reservado + (@CANTIDADRECIBIDA*@FACTOR)
		WHERE
			Cve_Grupo = SUBSTRING(@CVE_MATERIAL,1,3)
		AND Cve_Habilitacion = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))


		--SE CHECA QUE SE HAYA RECIBIO LA PARCIALIDAD COMPLETA, AQUI ES SIN MULTIPLICAR POR EL FACTOR
		IF @CANTIDADTOTALRECIBIDAXPARCIALIDAD >= @CANTIDAD_OCXPARCIALIDAD
		BEGIN
			--SE FINALIZA LA PARCIALIDAD
			UPDATE
				ORDEN_COMPRA_FECHAS_PROMESA_ENTREGA
			SET 
				Recibido = 1,
				Confirmado = 1
			WHERE
				Empresa = @EMPRESA
			AND No_OrdenCompra = @NO_ORDENCOMPRA
			AND Partida = @PARTIDA
			AND No_Parcialidad = @NOPARCIALIDAD
		END

		--SE VERIFICA QUE LA PARTIDA DE LA OC SE HAYA RECIBIDO POR COMPLETO
		IF @CANTIDADTOTALRECIBIDAXPARTIDA >= @CANTIDAD_OC
		BEGIN
			--SI YA SE RECIBIÓ LA PARTIDA DE LA OC POR COMPLETO, SE FINALIZA LA PARTIDA
			UPDATE
				ORDEN_COMPRA
			SET 
				RECIBIDO = 1,
				CantidadDisponible = 0
			WHERE
				Empresa = @EMPRESA
			AND No_OrdenCompra = @NO_ORDENCOMPRA
			AND Partida = @PARTIDA

			--SE LIBERA A INVENTARIO LO QUE NO SE ASIGNÓ A NINGÚN PEDIDO O QUE SE HAYA RECIBIDO DE MÁS
			UPDATE
				HABILITACION
			SET
				Existencia = Existencia + (@CANTIDADTOTALRECIBIDAXPARTIDA-@CANTIDAD_OC+@CANTIDADDISPONIBLE_OC),
				Reservado = Reservado - (@CANTIDADTOTALRECIBIDAXPARTIDA-@CANTIDAD_OC+@CANTIDADDISPONIBLE_OC)
			WHERE
				Cve_Grupo = SUBSTRING(@CVE_MATERIAL,1,3)
			AND Cve_Habilitacion = CONVERT(NUMERIC(18,0),SUBSTRING(@CVE_MATERIAL,4,6))
		END
	END
END
GO

